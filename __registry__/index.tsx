// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react";

// Helper function to safely import components
const safeLazy = (importFn) => {
  return React.lazy(() =>
    importFn().catch((error) => {
      console.error("Failed to load component:", error);
      return {
        default: () =>
          React.createElement(
            "div",
            {
              style: {
                padding: "1rem",
                backgroundColor: "rgba(239, 68, 68, 0.1)",
                border: "1px solid rgba(239, 68, 68, 0.2)",
                borderRadius: "0.375rem",
                color: "rgb(185, 28, 28)",
                fontSize: "0.875rem",
              },
            },
            "Failed to load component",
          ),
      };
    }),
  );
};

export const Index: Record<string, any> = {
  default: {
    avatar: {
      name: "avatar",
      type: "registry:ui",
      registryDependencies: [],
      files: ["registry/default/ui/avatar.tsx"],
      component: safeLazy(() => import("@/registry/default/ui/avatar")),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/avatar.json",
      chunks: [],
    },
    button: {
      name: "button",
      type: "registry:ui",
      registryDependencies: [],
      files: ["registry/default/ui/button.tsx"],
      component: safeLazy(() => import("@/registry/default/ui/button")),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/button.json",
      chunks: [],
    },
    input: {
      name: "input",
      type: "registry:ui",
      registryDependencies: [],
      files: ["registry/default/ui/input.tsx"],
      component: safeLazy(() => import("@/registry/default/ui/input")),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/input.json",
      chunks: [],
    },
    "mode-toggle": {
      name: "mode-toggle",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: ["registry/default/ui/mode-toggle.tsx"],
      component: safeLazy(() => import("@/registry/default/ui/mode-toggle")),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/mode-toggle.json",
      chunks: [],
    },
    switch: {
      name: "switch",
      type: "registry:ui",
      registryDependencies: [],
      files: ["registry/default/ui/switch.tsx"],
      component: safeLazy(() => import("@/registry/default/ui/switch")),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/switch.json",
      chunks: [],
    },
    tabs: {
      name: "tabs",
      type: "registry:ui",
      registryDependencies: [],
      files: ["registry/default/ui/tabs.tsx"],
      component: safeLazy(() => import("@/registry/default/ui/tabs")),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/tabs.json",
      chunks: [],
    },
    "avatar-demo": {
      name: "avatar-demo",
      type: "registry:ui",
      registryDependencies: ["avatar"],
      files: ["registry/default/example/avatar-demo.tsx"],
      component: safeLazy(() =>
        import("@/registry/default/example/avatar-demo").then((mod) => {
          // For demo components, try to use default export first, then specific demo component
          if (mod.default) {
            return { default: mod.default };
          } else if (mod.AvatarDemo) {
            return { default: mod.AvatarDemo };
          } else {
            console.error(
              "Could not find default export or demo export in @/registry/default/example/avatar-demo",
            );
            return {
              default: () =>
                React.createElement(
                  "div",
                  {
                    className:
                      "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                  },
                  "Component failed to load",
                ),
            };
          }
        }),
      ),
      variants: {
        demo: {
          name: "demo",
          description: "demo variant of avatar",
          component: safeLazy(() =>
            import("@/registry/default/example/avatar-demo").then((mod) => {
              if (mod.AvatarDemo) {
                return { default: mod.AvatarDemo };
              } else {
                console.error(
                  "Variant component AvatarDemo not found in @/registry/default/example/avatar-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant demo not found",
                    ),
                };
              }
            }),
          ),
        },
        circle: {
          name: "circle",
          description: "circle variant of avatar",
          component: safeLazy(() =>
            import("@/registry/default/example/avatar-demo").then((mod) => {
              if (mod.AvatarCircle) {
                return { default: mod.AvatarCircle };
              } else {
                console.error(
                  "Variant component AvatarCircle not found in @/registry/default/example/avatar-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant circle not found",
                    ),
                };
              }
            }),
          ),
        },
        square: {
          name: "square",
          description: "square variant of avatar",
          component: safeLazy(() =>
            import("@/registry/default/example/avatar-demo").then((mod) => {
              if (mod.AvatarSquare) {
                return { default: mod.AvatarSquare };
              } else {
                console.error(
                  "Variant component AvatarSquare not found in @/registry/default/example/avatar-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant square not found",
                    ),
                };
              }
            }),
          ),
        },
        sizes: {
          name: "sizes",
          description: "sizes variant of avatar",
          component: safeLazy(() =>
            import("@/registry/default/example/avatar-demo").then((mod) => {
              if (mod.AvatarSizes) {
                return { default: mod.AvatarSizes };
              } else {
                console.error(
                  "Variant component AvatarSizes not found in @/registry/default/example/avatar-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant sizes not found",
                    ),
                };
              }
            }),
          ),
        },
        withFallback: {
          name: "withFallback",
          description: "withFallback variant of avatar",
          component: safeLazy(() =>
            import("@/registry/default/example/avatar-demo").then((mod) => {
              if (mod.AvatarWithFallback) {
                return { default: mod.AvatarWithFallback };
              } else {
                console.error(
                  "Variant component AvatarWithFallback not found in @/registry/default/example/avatar-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant withFallback not found",
                    ),
                };
              }
            }),
          ),
        },
      },
      source: "https://ui.shaduxe.com/r/styles/default/avatar-demo.json",
      chunks: [],
    },
    "button-demo": {
      name: "button-demo",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: ["registry/default/example/button-demo.tsx"],
      component: safeLazy(() =>
        import("@/registry/default/example/button-demo").then((mod) => {
          // For demo components, try to use default export first, then specific demo component
          if (mod.default) {
            return { default: mod.default };
          } else if (mod.ButtonDemo) {
            return { default: mod.ButtonDemo };
          } else {
            console.error(
              "Could not find default export or demo export in @/registry/default/example/button-demo",
            );
            return {
              default: () =>
                React.createElement(
                  "div",
                  {
                    className:
                      "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                  },
                  "Component failed to load",
                ),
            };
          }
        }),
      ),
      variants: {
        demo: {
          name: "demo",
          description: "demo variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonDemo) {
                return { default: mod.ButtonDemo };
              } else {
                console.error(
                  "Variant component ButtonDemo not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant demo not found",
                    ),
                };
              }
            }),
          ),
        },
        default: {
          name: "default",
          description: "default variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonDefault) {
                return { default: mod.ButtonDefault };
              } else {
                console.error(
                  "Variant component ButtonDefault not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant default not found",
                    ),
                };
              }
            }),
          ),
        },
        destructive: {
          name: "destructive",
          description: "destructive variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonDestructive) {
                return { default: mod.ButtonDestructive };
              } else {
                console.error(
                  "Variant component ButtonDestructive not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant destructive not found",
                    ),
                };
              }
            }),
          ),
        },
        outline: {
          name: "outline",
          description: "outline variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonOutline) {
                return { default: mod.ButtonOutline };
              } else {
                console.error(
                  "Variant component ButtonOutline not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant outline not found",
                    ),
                };
              }
            }),
          ),
        },
        secondary: {
          name: "secondary",
          description: "secondary variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonSecondary) {
                return { default: mod.ButtonSecondary };
              } else {
                console.error(
                  "Variant component ButtonSecondary not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant secondary not found",
                    ),
                };
              }
            }),
          ),
        },
        ghost: {
          name: "ghost",
          description: "ghost variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonGhost) {
                return { default: mod.ButtonGhost };
              } else {
                console.error(
                  "Variant component ButtonGhost not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant ghost not found",
                    ),
                };
              }
            }),
          ),
        },
        link: {
          name: "link",
          description: "link variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonLink) {
                return { default: mod.ButtonLink };
              } else {
                console.error(
                  "Variant component ButtonLink not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant link not found",
                    ),
                };
              }
            }),
          ),
        },
        expandIcon: {
          name: "expandIcon",
          description: "expandIcon variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonExpandIcon) {
                return { default: mod.ButtonExpandIcon };
              } else {
                console.error(
                  "Variant component ButtonExpandIcon not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant expandIcon not found",
                    ),
                };
              }
            }),
          ),
        },
        ringHover: {
          name: "ringHover",
          description: "ringHover variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonRingHover) {
                return { default: mod.ButtonRingHover };
              } else {
                console.error(
                  "Variant component ButtonRingHover not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant ringHover not found",
                    ),
                };
              }
            }),
          ),
        },
        ringHoverOutline: {
          name: "ringHoverOutline",
          description: "ringHoverOutline variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonRingHoverOutline) {
                return { default: mod.ButtonRingHoverOutline };
              } else {
                console.error(
                  "Variant component ButtonRingHoverOutline not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant ringHoverOutline not found",
                    ),
                };
              }
            }),
          ),
        },
        shine: {
          name: "shine",
          description: "shine variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonShine) {
                return { default: mod.ButtonShine };
              } else {
                console.error(
                  "Variant component ButtonShine not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant shine not found",
                    ),
                };
              }
            }),
          ),
        },
        gooeyRight: {
          name: "gooeyRight",
          description: "gooeyRight variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonGooeyRight) {
                return { default: mod.ButtonGooeyRight };
              } else {
                console.error(
                  "Variant component ButtonGooeyRight not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant gooeyRight not found",
                    ),
                };
              }
            }),
          ),
        },
        gooeyLeft: {
          name: "gooeyLeft",
          description: "gooeyLeft variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonGooeyLeft) {
                return { default: mod.ButtonGooeyLeft };
              } else {
                console.error(
                  "Variant component ButtonGooeyLeft not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant gooeyLeft not found",
                    ),
                };
              }
            }),
          ),
        },
        linkHover1: {
          name: "linkHover1",
          description: "linkHover1 variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonLinkHover1) {
                return { default: mod.ButtonLinkHover1 };
              } else {
                console.error(
                  "Variant component ButtonLinkHover1 not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant linkHover1 not found",
                    ),
                };
              }
            }),
          ),
        },
        linkHover2: {
          name: "linkHover2",
          description: "linkHover2 variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonLinkHover2) {
                return { default: mod.ButtonLinkHover2 };
              } else {
                console.error(
                  "Variant component ButtonLinkHover2 not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant linkHover2 not found",
                    ),
                };
              }
            }),
          ),
        },
        sizes: {
          name: "sizes",
          description: "sizes variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonSizes) {
                return { default: mod.ButtonSizes };
              } else {
                console.error(
                  "Variant component ButtonSizes not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant sizes not found",
                    ),
                };
              }
            }),
          ),
        },
        iconLeft: {
          name: "iconLeft",
          description: "iconLeft variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonIconLeft) {
                return { default: mod.ButtonIconLeft };
              } else {
                console.error(
                  "Variant component ButtonIconLeft not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant iconLeft not found",
                    ),
                };
              }
            }),
          ),
        },
        iconRight: {
          name: "iconRight",
          description: "iconRight variant of button",
          component: safeLazy(() =>
            import("@/registry/default/example/button-demo").then((mod) => {
              if (mod.ButtonIconRight) {
                return { default: mod.ButtonIconRight };
              } else {
                console.error(
                  "Variant component ButtonIconRight not found in @/registry/default/example/button-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant iconRight not found",
                    ),
                };
              }
            }),
          ),
        },
      },
      source: "https://ui.shaduxe.com/r/styles/default/button-demo.json",
      chunks: [],
    },
    "input-demo": {
      name: "input-demo",
      type: "registry:ui",
      registryDependencies: ["input"],
      files: ["registry/default/example/input-demo.tsx"],
      component: safeLazy(() =>
        import("@/registry/default/example/input-demo").then((mod) => {
          // For demo components, try to use default export first, then specific demo component
          if (mod.default) {
            return { default: mod.default };
          } else if (mod.InputDemo) {
            return { default: mod.InputDemo };
          } else {
            console.error(
              "Could not find default export or demo export in @/registry/default/example/input-demo",
            );
            return {
              default: () =>
                React.createElement(
                  "div",
                  {
                    className:
                      "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                  },
                  "Component failed to load",
                ),
            };
          }
        }),
      ),
      variants: {
        demo: {
          name: "demo",
          description: "demo variant of input",
          component: safeLazy(() =>
            import("@/registry/default/example/input-demo").then((mod) => {
              if (mod.InputDemo) {
                return { default: mod.InputDemo };
              } else {
                console.error(
                  "Variant component InputDemo not found in @/registry/default/example/input-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant demo not found",
                    ),
                };
              }
            }),
          ),
        },
        default: {
          name: "default",
          description: "default variant of input",
          component: safeLazy(() =>
            import("@/registry/default/example/input-demo").then((mod) => {
              if (mod.InputDefault) {
                return { default: mod.InputDefault };
              } else {
                console.error(
                  "Variant component InputDefault not found in @/registry/default/example/input-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant default not found",
                    ),
                };
              }
            }),
          ),
        },
        underline: {
          name: "underline",
          description: "underline variant of input",
          component: safeLazy(() =>
            import("@/registry/default/example/input-demo").then((mod) => {
              if (mod.InputUnderline) {
                return { default: mod.InputUnderline };
              } else {
                console.error(
                  "Variant component InputUnderline not found in @/registry/default/example/input-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant underline not found",
                    ),
                };
              }
            }),
          ),
        },
        pill: {
          name: "pill",
          description: "pill variant of input",
          component: safeLazy(() =>
            import("@/registry/default/example/input-demo").then((mod) => {
              if (mod.InputPill) {
                return { default: mod.InputPill };
              } else {
                console.error(
                  "Variant component InputPill not found in @/registry/default/example/input-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant pill not found",
                    ),
                };
              }
            }),
          ),
        },
        sizes: {
          name: "sizes",
          description: "sizes variant of input",
          component: safeLazy(() =>
            import("@/registry/default/example/input-demo").then((mod) => {
              if (mod.InputSizes) {
                return { default: mod.InputSizes };
              } else {
                console.error(
                  "Variant component InputSizes not found in @/registry/default/example/input-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant sizes not found",
                    ),
                };
              }
            }),
          ),
        },
        iconLeft: {
          name: "iconLeft",
          description: "iconLeft variant of input",
          component: safeLazy(() =>
            import("@/registry/default/example/input-demo").then((mod) => {
              if (mod.InputIconLeft) {
                return { default: mod.InputIconLeft };
              } else {
                console.error(
                  "Variant component InputIconLeft not found in @/registry/default/example/input-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant iconLeft not found",
                    ),
                };
              }
            }),
          ),
        },
        iconRight: {
          name: "iconRight",
          description: "iconRight variant of input",
          component: safeLazy(() =>
            import("@/registry/default/example/input-demo").then((mod) => {
              if (mod.InputIconRight) {
                return { default: mod.InputIconRight };
              } else {
                console.error(
                  "Variant component InputIconRight not found in @/registry/default/example/input-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant iconRight not found",
                    ),
                };
              }
            }),
          ),
        },
      },
      source: "https://ui.shaduxe.com/r/styles/default/input-demo.json",
      chunks: [],
    },
    "switch-demo": {
      name: "switch-demo",
      type: "registry:ui",
      registryDependencies: ["switch"],
      files: ["registry/default/example/switch-demo.tsx"],
      component: safeLazy(() =>
        import("@/registry/default/example/switch-demo").then((mod) => {
          // For demo components, try to use default export first, then specific demo component
          if (mod.default) {
            return { default: mod.default };
          } else if (mod.SwitchDemo) {
            return { default: mod.SwitchDemo };
          } else {
            console.error(
              "Could not find default export or demo export in @/registry/default/example/switch-demo",
            );
            return {
              default: () =>
                React.createElement(
                  "div",
                  {
                    className:
                      "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                  },
                  "Component failed to load",
                ),
            };
          }
        }),
      ),
      variants: {
        demo: {
          name: "demo",
          description: "demo variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchDemo) {
                return { default: mod.SwitchDemo };
              } else {
                console.error(
                  "Variant component SwitchDemo not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant demo not found",
                    ),
                };
              }
            }),
          ),
        },
        default: {
          name: "default",
          description: "default variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchDefault) {
                return { default: mod.SwitchDefault };
              } else {
                console.error(
                  "Variant component SwitchDefault not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant default not found",
                    ),
                };
              }
            }),
          ),
        },
        rounded: {
          name: "rounded",
          description: "rounded variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchRounded) {
                return { default: mod.SwitchRounded };
              } else {
                console.error(
                  "Variant component SwitchRounded not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant rounded not found",
                    ),
                };
              }
            }),
          ),
        },
        square: {
          name: "square",
          description: "square variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchSquare) {
                return { default: mod.SwitchSquare };
              } else {
                console.error(
                  "Variant component SwitchSquare not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant square not found",
                    ),
                };
              }
            }),
          ),
        },
        ios: {
          name: "ios",
          description: "ios variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchIOS) {
                return { default: mod.SwitchIOS };
              } else {
                console.error(
                  "Variant component SwitchIOS not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant ios not found",
                    ),
                };
              }
            }),
          ),
        },
        sizes: {
          name: "sizes",
          description: "sizes variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchSizes) {
                return { default: mod.SwitchSizes };
              } else {
                console.error(
                  "Variant component SwitchSizes not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant sizes not found",
                    ),
                };
              }
            }),
          ),
        },
        thumbDefault: {
          name: "thumbDefault",
          description: "thumbDefault variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchThumbDefault) {
                return { default: mod.SwitchThumbDefault };
              } else {
                console.error(
                  "Variant component SwitchThumbDefault not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant thumbDefault not found",
                    ),
                };
              }
            }),
          ),
        },
        thumbRounded: {
          name: "thumbRounded",
          description: "thumbRounded variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchThumbRounded) {
                return { default: mod.SwitchThumbRounded };
              } else {
                console.error(
                  "Variant component SwitchThumbRounded not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant thumbRounded not found",
                    ),
                };
              }
            }),
          ),
        },
        thumbSquare: {
          name: "thumbSquare",
          description: "thumbSquare variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchThumbSquare) {
                return { default: mod.SwitchThumbSquare };
              } else {
                console.error(
                  "Variant component SwitchThumbSquare not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant thumbSquare not found",
                    ),
                };
              }
            }),
          ),
        },
        thumbIOS: {
          name: "thumbIOS",
          description: "thumbIOS variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchThumbIOS) {
                return { default: mod.SwitchThumbIOS };
              } else {
                console.error(
                  "Variant component SwitchThumbIOS not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant thumbIOS not found",
                    ),
                };
              }
            }),
          ),
        },
        withLabels: {
          name: "withLabels",
          description: "withLabels variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchWithLabels) {
                return { default: mod.SwitchWithLabels };
              } else {
                console.error(
                  "Variant component SwitchWithLabels not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant withLabels not found",
                    ),
                };
              }
            }),
          ),
        },
        withIcons: {
          name: "withIcons",
          description: "withIcons variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchWithIcons) {
                return { default: mod.SwitchWithIcons };
              } else {
                console.error(
                  "Variant component SwitchWithIcons not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant withIcons not found",
                    ),
                };
              }
            }),
          ),
        },
        disabled: {
          name: "disabled",
          description: "disabled variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchDisabled) {
                return { default: mod.SwitchDisabled };
              } else {
                console.error(
                  "Variant component SwitchDisabled not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant disabled not found",
                    ),
                };
              }
            }),
          ),
        },
        defaultChecked: {
          name: "defaultChecked",
          description: "defaultChecked variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchDefaultChecked) {
                return { default: mod.SwitchDefaultChecked };
              } else {
                console.error(
                  "Variant component SwitchDefaultChecked not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant defaultChecked not found",
                    ),
                };
              }
            }),
          ),
        },
        customThumb: {
          name: "customThumb",
          description: "customThumb variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchCustomThumb) {
                return { default: mod.SwitchCustomThumb };
              } else {
                console.error(
                  "Variant component SwitchCustomThumb not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant customThumb not found",
                    ),
                };
              }
            }),
          ),
        },
        grid: {
          name: "grid",
          description: "grid variant of switch",
          component: safeLazy(() =>
            import("@/registry/default/example/switch-demo").then((mod) => {
              if (mod.SwitchGrid) {
                return { default: mod.SwitchGrid };
              } else {
                console.error(
                  "Variant component SwitchGrid not found in @/registry/default/example/switch-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant grid not found",
                    ),
                };
              }
            }),
          ),
        },
      },
      source: "https://ui.shaduxe.com/r/styles/default/switch-demo.json",
      chunks: [],
    },
    "tabs-demo": {
      name: "tabs-demo",
      type: "registry:ui",
      registryDependencies: ["tabs"],
      files: ["registry/default/example/tabs-demo.tsx"],
      component: safeLazy(() =>
        import("@/registry/default/example/tabs-demo").then((mod) => {
          // For demo components, try to use default export first, then specific demo component
          if (mod.default) {
            return { default: mod.default };
          } else if (mod.TabsDemo) {
            return { default: mod.TabsDemo };
          } else {
            console.error(
              "Could not find default export or demo export in @/registry/default/example/tabs-demo",
            );
            return {
              default: () =>
                React.createElement(
                  "div",
                  {
                    className:
                      "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                  },
                  "Component failed to load",
                ),
            };
          }
        }),
      ),
      variants: {
        demo: {
          name: "demo",
          description: "demo variant of tabs",
          component: safeLazy(() =>
            import("@/registry/default/example/tabs-demo").then((mod) => {
              if (mod.TabsDemo) {
                return { default: mod.TabsDemo };
              } else {
                console.error(
                  "Variant component TabsDemo not found in @/registry/default/example/tabs-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant demo not found",
                    ),
                };
              }
            }),
          ),
        },
        default: {
          name: "default",
          description: "default variant of tabs",
          component: safeLazy(() =>
            import("@/registry/default/example/tabs-demo").then((mod) => {
              if (mod.TabsDefault) {
                return { default: mod.TabsDefault };
              } else {
                console.error(
                  "Variant component TabsDefault not found in @/registry/default/example/tabs-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant default not found",
                    ),
                };
              }
            }),
          ),
        },
        underline: {
          name: "underline",
          description: "underline variant of tabs",
          component: safeLazy(() =>
            import("@/registry/default/example/tabs-demo").then((mod) => {
              if (mod.TabsUnderline) {
                return { default: mod.TabsUnderline };
              } else {
                console.error(
                  "Variant component TabsUnderline not found in @/registry/default/example/tabs-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant underline not found",
                    ),
                };
              }
            }),
          ),
        },
        pill: {
          name: "pill",
          description: "pill variant of tabs",
          component: safeLazy(() =>
            import("@/registry/default/example/tabs-demo").then((mod) => {
              if (mod.TabsPill) {
                return { default: mod.TabsPill };
              } else {
                console.error(
                  "Variant component TabsPill not found in @/registry/default/example/tabs-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant pill not found",
                    ),
                };
              }
            }),
          ),
        },
        rounded: {
          name: "rounded",
          description: "rounded variant of tabs",
          component: safeLazy(() =>
            import("@/registry/default/example/tabs-demo").then((mod) => {
              if (mod.TabsRounded) {
                return { default: mod.TabsRounded };
              } else {
                console.error(
                  "Variant component TabsRounded not found in @/registry/default/example/tabs-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant rounded not found",
                    ),
                };
              }
            }),
          ),
        },
        folder: {
          name: "folder",
          description: "folder variant of tabs",
          component: safeLazy(() =>
            import("@/registry/default/example/tabs-demo").then((mod) => {
              if (mod.TabsFolder) {
                return { default: mod.TabsFolder };
              } else {
                console.error(
                  "Variant component TabsFolder not found in @/registry/default/example/tabs-demo",
                );
                return {
                  default: () =>
                    React.createElement(
                      "div",
                      {
                        className:
                          "p-4 text-red-500 bg-red-50 border border-red-100 rounded",
                      },
                      "Variant folder not found",
                    ),
                };
              }
            }),
          ),
        },
      },
      source: "https://ui.shaduxe.com/r/styles/default/tabs-demo.json",
      chunks: [],
    },
    "button-installation-example": {
      name: "button-installation-example",
      type: "registry:ui",
      registryDependencies: ["button"],
      files: ["registry/default/example/button-installation-example.tsx"],
      component: safeLazy(
        () => import("@/registry/default/example/button-installation-example"),
      ),
      variants: {},
      source:
        "https://ui.shaduxe.com/r/styles/default/button-installation-example.json",
      chunks: [],
    },
    "pricing-one": {
      name: "pricing-one",
      type: "registry:block",
      registryDependencies: ["badge", "button"],
      files: ["registry/default/blocks/pricing-one.tsx"],
      component: safeLazy(
        () => import("@/registry/default/blocks/pricing-one"),
      ),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/pricing-one.json",
      chunks: [],
    },
    "pricing-two": {
      name: "pricing-two",
      type: "registry:block",
      registryDependencies: ["card", "button", "separator"],
      files: ["registry/default/blocks/pricing-two.tsx"],
      component: safeLazy(
        () => import("@/registry/default/blocks/pricing-two"),
      ),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/pricing-two.json",
      chunks: [],
    },
    "pricing-three": {
      name: "pricing-three",
      type: "registry:block",
      registryDependencies: ["card", "badge", "button"],
      files: ["registry/default/blocks/pricing-three.tsx"],
      component: safeLazy(
        () => import("@/registry/default/blocks/pricing-three"),
      ),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/pricing-three.json",
      chunks: [],
    },
    utils: {
      name: "utils",
      type: "registry:lib",
      registryDependencies: [],
      files: ["registry/default/lib/utils.ts"],
      component: safeLazy(() =>
        import("@/registry/default/lib/utils").then((mod) => {
          return { default: mod.default || mod };
        }),
      ),
      variants: {},
      source: "https://ui.shaduxe.com/r/styles/default/utils.json",
      chunks: [],
    },
  },
};
