{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "avatar",
  "type": "registry:ui",
  "title": "Avatar",
  "description": "An image element with a fallback for representing the user.",
  "author": "shaduxe-ui",
  "dependencies": [
    "@radix-ui/react-avatar",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "default/ui/avatar",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst avatarVariants = cva(\"relative flex shrink-0 overflow-hidden\", {\n  variants: {\n    variant: {\n      circle: \"rounded-full\",\n      square: \"rounded-none\",\n      rounded: \"rounded-md\",\n    },\n    size: {\n      icon: \"size-4\",\n      xs: \"size-6\",\n      sm: \"size-8\",\n      default: \"size-9\",\n      md: \"size-10\",\n      lg: \"size-12\",\n      xl: \"size-16\",\n      \"2xl\": \"size-20\",\n    },\n  },\n  defaultVariants: {\n    variant: \"circle\",\n    size: \"default\",\n  },\n});\n\nconst avatarImageVariants = cva(\"aspect-square size-full\", {\n  variants: {\n    variant: {\n      circle: \"rounded-full\",\n      square: \"rounded-none\",\n      rounded: \"rounded-md\",\n    },\n  },\n  defaultVariants: {\n    variant: \"circle\",\n  },\n});\n\nexport interface AvatarProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof avatarVariants> {}\n\nfunction Avatar({ className, variant, size, ...props }: AvatarProps) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(avatarVariants({ variant, size }), className)}\n      {...props}\n    >\n      {React.Children.map(props.children, (child) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child as React.ReactElement<any>, {\n              variant,\n              className: cn(\n                (child as React.ReactElement<any>).props.className,\n                avatarImageVariants({ variant }),\n              ),\n            })\n          : child,\n      )}\n    </AvatarPrimitive.Root>\n  );\n}\n\nexport interface AvatarImageProps\n  extends React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image> {\n  variant?: VariantProps<typeof avatarVariants>[\"variant\"];\n}\n\nfunction AvatarImage({ className, variant, ...props }: AvatarImageProps) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(avatarImageVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"flex size-full items-center justify-center bg-muted\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Avatar, AvatarFallback, AvatarImage };",
      "type": "registry:ui"
    }
  ]
}