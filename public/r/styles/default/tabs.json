{
  "name": "tabs",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/tabs.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst tabsVariants = cva(\"\", {\n  variants: {\n    variant: {\n      default: \"\",\n      underline: \"\",\n      pill: \"\",\n      rounded: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\nconst tabsListVariants = cva(\n  \"inline-flex h-10 items-center justify-center bg-muted p-1 text-muted-foreground rounded-md\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        underline: \"bg-transparent space-x-4 p-0 border-b rounded-none\",\n        pill: \"bg-transparent p-1\",\n        rounded: \"rounded-full\",\n      },\n    },\n  },\n);\n\nconst tabsTriggerVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"rounded-sm data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n        underline:\n          \"rounded-none data-[state=active]:bg-transparent data-[state=active]:text-foreground data-[state=active]:shadow-none border-b-2 border-transparent data-[state=active]:border-primary\",\n        pill: \"rounded-full data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\",\n        rounded:\n          \"rounded-full data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\",\n      },\n    },\n  },\n);\n\nexport interface TabsProps\n  extends React.ComponentPropsWithoutRef<typeof TabsPrimitive.Root>,\n    VariantProps<typeof tabsVariants> {}\n\nconst TabsContext = React.createContext<VariantProps<typeof tabsVariants>>({\n  variant: \"default\",\n});\n\nconst Tabs = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Root>,\n  TabsProps\n>(({ className, variant = \"default\", ...props }, ref) => (\n  <TabsContext.Provider value={{ variant }}>\n    <TabsPrimitive.Root\n      ref={ref}\n      className={cn(tabsVariants({ variant, className }))}\n      {...props}\n    />\n  </TabsContext.Provider>\n));\nTabs.displayName = TabsPrimitive.Root.displayName;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => {\n  const { variant } = React.useContext(TabsContext);\n  return (\n    <TabsPrimitive.List\n      ref={ref}\n      className={cn(tabsListVariants({ variant }), className)}\n      {...props}\n    />\n  );\n});\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => {\n  const { variant } = React.useContext(TabsContext);\n  return (\n    <TabsPrimitive.Trigger\n      ref={ref}\n      className={cn(tabsTriggerVariants({ variant }), className)}\n      {...props}\n    />\n  );\n});\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}