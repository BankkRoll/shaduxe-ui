{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:ui",
  "title": "Badge",
  "description": "A label that can be used to indicate a status or category.",
  "author": "shaduxe-ui",
  "files": [
    {
      "path": "default/ui/badge",
      "content": "import { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center border font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        ghost: \"border-transparent hover:bg-muted hover:text-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline border-transparent\",\n        success:\n          \"border-transparent bg-green-500 text-white shadow hover:bg-green-500/80\",\n        warning:\n          \"border-transparent bg-yellow-500 text-white shadow hover:bg-yellow-500/80\",\n        info: \"border-transparent bg-blue-500 text-white shadow hover:bg-blue-500/80\",\n      },\n      size: {\n        xs: \"h-5 text-[10px] px-1.5 py-0\",\n        sm: \"h-6 text-xs px-2 py-0.5\",\n        md: \"h-7 text-xs px-2.5 py-0.5\",\n        lg: \"h-8 text-sm px-3 py-1\",\n      },\n      shape: {\n        default: \"rounded-md\",\n        rounded: \"rounded-full\",\n        square: \"rounded-none\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n      shape: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nconst Badge = React.forwardRef<HTMLDivElement, BadgeProps>(\n  ({ className, variant, size, shape, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(badgeVariants({ variant, size, shape }), className)}\n      {...props}\n    />\n  ),\n);\nBadge.displayName = \"Badge\";\n\nexport { Badge, badgeVariants };",
      "type": "registry:ui"
    }
  ]
}