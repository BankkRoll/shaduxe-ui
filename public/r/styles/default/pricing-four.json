{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-four",
  "type": "registry:block",
  "title": "Pricing with Testimonials",
  "description": "A pricing component with testimonials and responsive layout.",
  "author": "shaduxe-ui",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "registryDependencies": [
    "card",
    "badge",
    "button",
    "separator"
  ],
  "files": [
    {
      "path": "default/blocks/pricing-four",
      "content": "import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Check,\n  ChevronRight,\n  Crown,\n  ExternalLink,\n  Heart,\n  LucideIcon,\n  Shield,\n  ShoppingCart,\n  Star,\n  Stars,\n} from \"lucide-react\";\nimport { AnimatePresence, motion, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport interface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  company?: string;\n  content: string;\n  rating: number;\n  avatar: string;\n}\n\nexport interface Feature {\n  text: string;\n}\n\nexport interface Benefit {\n  text: string;\n  icon: LucideIcon;\n}\n\nexport interface PricingFourProps {\n  className?: string;\n  cardClassName?: string;\n  maxWidth?: string;\n}\n\nconst pricingConfig = {\n  badge: {\n    icon: Crown,\n    text: \"Premium Template\",\n  },\n  title: \"Next.js Starter Template\",\n  subtitle:\n    \"Build your next SaaS application with this premium starter template\",\n  price: {\n    current: \"$69.99\",\n    original: \"$99.99\",\n    discount: \"30% Off\",\n  },\n  benefits: [\n    {\n      text: \"One-time payment, lifetime updates\",\n      icon: Check,\n    },\n    {\n      text: \"30-day money-back guarantee\",\n      icon: Shield,\n    },\n    {\n      text: \"Created by developers for developers\",\n      icon: Heart,\n    },\n  ],\n  features: [\n    \"Modern Next.js 14 App Router\",\n    \"TypeScript and Tailwind CSS\",\n    \"Supabase Auth Integration\",\n    \"Responsive Dashboard Layout\",\n    \"Dark Mode Support\",\n    \"Authentication Flows\",\n    \"50+ UI Components\",\n    \"Email Templates\",\n    \"SEO Optimized\",\n    \"Performance Optimized\",\n    \"Premium Support\",\n  ].map((text) => ({ text })),\n  featuresIcon: Check,\n  featuresTitle: \"Included Features\",\n  featuresBadge: {\n    icon: Stars,\n    text: \"All Features\",\n  },\n  primaryButton: {\n    text: \"Purchase Template\",\n    chevronIcon: ChevronRight,\n    href: \"#\",\n  },\n  secondaryButton: {\n    text: \"Live Demo\",\n    icon: ExternalLink,\n    href: \"#\",\n  },\n  testimonials: [\n    {\n      id: 1,\n      name: \"Alex Johnson\",\n      role: \"Full Stack Developer\",\n      company: \"TechFlow\",\n      content:\n        \"This starter template saved me weeks of setup time. The Supabase integration is flawless, and the UI components are beautiful and easy to customize.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\",\n    },\n    {\n      id: 2,\n      name: \"Sarah Miller\",\n      role: \"Frontend Engineer\",\n      company: \"DesignHub\",\n      content:\n        \"I've used many starter templates, but this one stands out for its clean architecture and attention to detail.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/44.jpg\",\n    },\n    {\n      id: 3,\n      name: \"Michael Chen\",\n      role: \"Product Manager\",\n      company: \"InnovateLabs\",\n      content:\n        \"Our team was able to launch our MVP in record time thanks to this template. The authentication flow and user management features worked right out of the box.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/46.jpg\",\n    },\n    {\n      id: 4,\n      name: \"Emily Rodriguez\",\n      role: \"UX Designer\",\n      company: \"CreativeCraft\",\n      content:\n        \"The dark mode implementation is perfect, and the components are accessible by default.\",\n      rating: 4,\n      avatar: \"https://randomuser.me/api/portraits/women/65.jpg\",\n    },\n    {\n      id: 5,\n      name: \"David Park\",\n      role: \"CTO\",\n      company: \"StartupForge\",\n      content:\n        \"We evaluated several starter templates for our new project, and this one was by far the most complete..\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/22.jpg\",\n    },\n    {\n      id: 6,\n      name: \"Olivia Martinez\",\n      role: \"Product Owner\",\n      company: \"InnovateX\",\n      content:\n        \"After evaluating several solutions, we chose this one for its flexibility and robust feature set. \",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/24.jpg\",\n    },\n  ],\n  testimonialRotationSpeed: 5000,\n};\n\nexport default function PricingFour({\n  className,\n  cardClassName,\n  maxWidth = \"max-w-4xl\",\n}: PricingFourProps) {\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const isInView = useInView(sectionRef, { once: true, amount: 0.2 });\n  const [currentTestimonialIndex, setCurrentTestimonialIndex] = useState(0);\n\n  // Auto-rotate testimonials\n  useEffect(() => {\n    if (pricingConfig.testimonials.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setCurrentTestimonialIndex(\n        (prev) => (prev + 1) % pricingConfig.testimonials.length,\n      );\n    }, pricingConfig.testimonialRotationSpeed);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Extract data from config\n  const {\n    badge,\n    title,\n    subtitle,\n    price,\n    benefits,\n    features,\n    featuresIcon,\n    featuresTitle,\n    featuresBadge,\n    primaryButton,\n    secondaryButton,\n    testimonials,\n  } = pricingConfig;\n\n  // Component references\n  const BadgeIcon = badge?.icon;\n  const FeaturesBadgeIcon = featuresBadge?.icon;\n  const FeaturesIcon = featuresIcon;\n  const ChevronIcon = primaryButton.chevronIcon;\n  const SecondaryButtonIcon = secondaryButton?.icon;\n\n  return (\n    <div\n      ref={sectionRef}\n      className={`py-12 relative overflow-hidden ${className || \"\"}`}\n    >\n      <div\n        className={`container px-4 md:px-6 relative z-10 mx-auto ${maxWidth}`}\n      >\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n          transition={{ duration: 0.6, ease: [0.22, 1, 0.36, 1] }}\n        >\n          <Card\n            className={`overflow-hidden border border-primary/10 relative group ${cardClassName || \"\"}`}\n          >\n            <motion.div\n              className=\"absolute inset-0 pointer-events-none\"\n              initial={{ opacity: 0 }}\n              animate={isInView ? { opacity: 1 } : { opacity: 0 }}\n              transition={{ delay: 0.3, duration: 0.6 }}\n            >\n              <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-700 bg-gradient-to-r from-primary/5 via-primary/2 to-transparent\" />\n            </motion.div>\n\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Left column - Pricing details */}\n              <div className=\"p-6 md:p-8 md:w-1/2 flex flex-col\">\n                {badge && (\n                  <div className=\"flex items-center mb-4\">\n                    <Badge className=\"px-3 py-1 bg-primary/5 border-primary/10 text-primary hover:bg-primary/10\">\n                      {BadgeIcon && <BadgeIcon className=\"h-3.5 w-3.5 mr-1\" />}\n                      <span>{badge.text}</span>\n                    </Badge>\n                  </div>\n                )}\n\n                <h3 className=\"text-2xl font-bold mb-2\">{title}</h3>\n                <p className=\"text-muted-foreground mb-4\">{subtitle}</p>\n\n                <div className=\"flex items-baseline mb-6\">\n                  <span className=\"text-4xl font-bold\">{price.current}</span>\n                  {price.original && (\n                    <span className=\"text-muted-foreground ml-2 line-through\">\n                      {price.original}\n                    </span>\n                  )}\n                  {price.discount && (\n                    <Badge\n                      variant=\"outline\"\n                      className={`ml-3 border-green-400/30 text-green-500`}\n                    >\n                      <span>{price.discount}</span>\n                    </Badge>\n                  )}\n                </div>\n\n                <div className=\"space-y-4 mb-6\">\n                  {benefits.map((benefit, index) => {\n                    const BenefitIcon = benefit.icon;\n\n                    return (\n                      <div key={index} className=\"flex items-center gap-2\">\n                        <BenefitIcon className=\"h-4 w-4 text-primary\" />\n                        <span className=\"text-sm\">{benefit.text}</span>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <div className=\"mt-auto space-y-3\">\n                  <Button\n                    className=\"w-full gap-2 group\"\n                    size=\"lg\"\n                    asChild={!!primaryButton.href}\n                  >\n                    {primaryButton.href ? (\n                      <a href={primaryButton.href} target=\"_blank\">\n                        <span>{primaryButton.text}</span>\n                        {ChevronIcon && (\n                          <ChevronIcon className=\"h-4 w-4 ml-auto transition-transform group-hover:translate-x-1\" />\n                        )}\n                      </a>\n                    ) : (\n                      <>\n                        <span>{primaryButton.text}</span>\n                        {ChevronIcon && (\n                          <ChevronIcon className=\"h-4 w-4 ml-auto transition-transform group-hover:translate-x-1\" />\n                        )}\n                      </>\n                    )}\n                  </Button>\n\n                  {secondaryButton && (\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full gap-2\"\n                      size=\"lg\"\n                      asChild={!!secondaryButton.href}\n                    >\n                      {secondaryButton.href ? (\n                        <a href={secondaryButton.href} target=\"_blank\">\n                          <span>{secondaryButton.text}</span>\n                          {SecondaryButtonIcon && (\n                            <SecondaryButtonIcon className=\"h-4 w-4 ml-auto\" />\n                          )}\n                        </a>\n                      ) : (\n                        <>\n                          <span>{secondaryButton.text}</span>\n                          {SecondaryButtonIcon && (\n                            <SecondaryButtonIcon className=\"h-4 w-4 ml-auto\" />\n                          )}\n                        </>\n                      )}\n                    </Button>\n                  )}\n                </div>\n              </div>\n\n              {/* Right column - Features */}\n              <div className=\"p-6 md:p-8 md:w-1/2 md:border-l border-border/50\">\n                <div className=\"flex items-center mb-4\">\n                  <h4 className=\"font-semibold\">{featuresTitle}</h4>\n                </div>\n\n                <div className=\"space-y-3 mb-6\">\n                  {features.map((feature, i) => (\n                    <motion.div\n                      key={i}\n                      initial={{ opacity: 0, x: 20 }}\n                      animate={isInView ? { opacity: 1, x: 0 } : {}}\n                      transition={{ delay: 0.4 + i * 0.05, duration: 0.5 }}\n                      className=\"flex items-center gap-3\"\n                    >\n                      <div className=\"flex h-5 w-5 items-center justify-center rounded-full bg-primary/10\">\n                        <FeaturesIcon className=\"h-3 w-3 text-primary\" />\n                      </div>\n                      <span className=\"text-sm\">{feature.text}</span>\n                    </motion.div>\n                  ))}\n                </div>\n\n                {testimonials.length > 0 && (\n                  <>\n                    <Separator className=\"my-6\" />\n\n                    <div className=\"rounded-lg p-4 border border-border/50 relative overflow-hidden min-h-[140px]\">\n                      <AnimatePresence mode=\"wait\">\n                        {testimonials.map(\n                          (testimonial, index) =>\n                            index === currentTestimonialIndex && (\n                              <motion.div\n                                key={testimonial.id}\n                                initial={{ opacity: 0, y: 20 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                exit={{ opacity: 0, y: -20 }}\n                                transition={{ duration: 0.5 }}\n                                className=\"absolute inset-0 p-4\"\n                              >\n                                <div className=\"flex items-center gap-3 mb-2\">\n                                  <div className=\"h-8 w-8 rounded-full overflow-hidden\">\n                                    <img\n                                      src={\n                                        testimonial.avatar || \"/placeholder.svg\"\n                                      }\n                                      alt={`${testimonial.name}'s avatar`}\n                                      className=\"w-full h-full object-cover\"\n                                    />\n                                  </div>\n                                  <div>\n                                    <p className=\"font-medium text-sm\">\n                                      {testimonial.name}\n                                    </p>\n                                    <p className=\"text-xs text-muted-foreground\">\n                                      {testimonial.role}\n                                      {testimonial.company &&\n                                        ` at ${testimonial.company}`}\n                                    </p>\n                                  </div>\n                                  <div className=\"ml-auto flex\">\n                                    {[...Array(testimonial.rating)].map(\n                                      (_, i) => (\n                                        <Star\n                                          key={i}\n                                          className=\"h-3 w-3 fill-primary text-primary\"\n                                        />\n                                      ),\n                                    )}\n                                  </div>\n                                </div>\n                                <p className=\"text-sm italic\">\n                                  {testimonial.content}\n                                </p>\n                              </motion.div>\n                            ),\n                        )}\n                      </AnimatePresence>\n                    </div>\n\n                    {testimonials.length > 1 && (\n                      <div className=\"flex justify-center mt-4 gap-1\">\n                        {testimonials.map((_, index) => (\n                          <button\n                            key={index}\n                            className={`h-1.5 rounded-full transition-all ${\n                              index === currentTestimonialIndex\n                                ? \"w-4 bg-primary\"\n                                : \"w-1.5 bg-primary/30\"\n                            }`}\n                            onClick={() => setCurrentTestimonialIndex(index)}\n                            aria-label={`View testimonial ${index + 1}`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "type": "registry:block"
    }
  ]
}