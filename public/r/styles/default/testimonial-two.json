{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "testimonial-two",
  "type": "registry:block",
  "title": "Testimonial Two",
  "description": "A testimonial component with a single testimonial.",
  "author": "shaduxe-ui",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "registryDependencies": [
    "card",
    "badge",
    "button",
    "separator"
  ],
  "files": [
    {
      "path": "default/blocks/testimonial-two",
      "content": "\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { cn } from \"@/lib/utils\";\nimport { ChevronLeft, ChevronRight, Quote, Star } from \"lucide-react\";\nimport { motion, useAnimation, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport interface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  company: string;\n  content: string;\n  rating: number;\n  avatar: string;\n}\n\nexport interface TestimonialTwoProps {\n  className?: string;\n}\n\n// All data in a single config object\nconst testimonialsConfig = {\n  title: \"Loved by Developers\",\n  subtitle: \"See what others are saying about our premium starter template\",\n  testimonials: [\n    {\n      id: 1,\n      name: \"Alex Johnson\",\n      role: \"Full Stack Developer\",\n      company: \"TechFlow\",\n      content:\n        \"This starter template saved me weeks of setup time. The Supabase integration is flawless, and the UI components are beautiful and easy to customize.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\",\n    },\n    {\n      id: 2,\n      name: \"Sarah Miller\",\n      role: \"Frontend Engineer\",\n      company: \"DesignHub\",\n      content:\n        \"I've used many starter templates, but this one stands out for its clean architecture and attention to detail.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/44.jpg\",\n    },\n    {\n      id: 3,\n      name: \"Michael Chen\",\n      role: \"Product Manager\",\n      company: \"InnovateLabs\",\n      content:\n        \"Our team was able to launch our MVP in record time thanks to this template. The authentication flow and user management features worked right out of the box.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/46.jpg\",\n    },\n  ],\n  autoRotateInterval: 6000,\n  showVerifiedBadge: true,\n  trustedCompanies: [\"Google\", \"Microsoft\", \"Airbnb\", \"Spotify\", \"Netflix\"],\n  trustedCompaniesTitle: \"Trusted by teams at these companies and more\",\n};\n\nexport default function TestimonialTwo({ className }: TestimonialTwoProps) {\n  // State for active testimonial\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // Destructure config for easier access\n  const {\n    title,\n    subtitle,\n    testimonials,\n    autoRotateInterval,\n    showVerifiedBadge,\n    trustedCompanies,\n    trustedCompaniesTitle,\n  } = testimonialsConfig;\n\n  // Refs for scroll animations\n  const sectionRef = useRef<HTMLElement>(null);\n  const isInView = useInView(sectionRef, { once: true, amount: 0.2 });\n  const controls = useAnimation();\n\n  // Automatically cycle through testimonials\n  useEffect(() => {\n    if (autoRotateInterval <= 0 || testimonials.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setActiveIndex((prev) => (prev + 1) % testimonials.length);\n    }, autoRotateInterval);\n\n    return () => clearInterval(interval);\n  }, [testimonials.length, autoRotateInterval]);\n\n  // Trigger animations when section comes into view\n  useEffect(() => {\n    if (isInView) {\n      controls.start(\"visible\");\n    }\n  }, [isInView, controls]);\n\n  // Handlers for navigation\n  const handlePrev = () => {\n    setActiveIndex(\n      (prev) => (prev - 1 + testimonials.length) % testimonials.length,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prev) => (prev + 1) % testimonials.length);\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  if (testimonials.length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      ref={sectionRef}\n      id=\"testimonials-alt\"\n      className={cn(\n        \"py-16 md:py-32 relative overflow-hidden flex justify-center\",\n        className,\n      )}\n    >\n      <div className=\"items-center px-4 md:px-6\">\n        <motion.div\n          initial=\"hidden\"\n          animate={controls}\n          variants={containerVariants}\n          className=\"text-center mb-12 space-y-4\"\n        >\n          <motion.h2\n            variants={itemVariants}\n            className=\"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl\"\n          >\n            {title}\n          </motion.h2>\n          <motion.p\n            variants={itemVariants}\n            className=\"text-muted-foreground max-w-[700px] mx-auto md:text-xl/relaxed\"\n          >\n            {subtitle}\n          </motion.p>\n        </motion.div>\n\n        <motion.div\n          initial=\"hidden\"\n          animate={controls}\n          variants={containerVariants}\n          className=\"md:grid md:grid-cols-[1fr_auto] gap-8 items-center max-w-[1200px]\"\n        >\n          <motion.div variants={itemVariants} className=\"relative\">\n            <div className=\"absolute -top-6 -left-6 z-10\">\n              <Quote className=\"h-12 w-12 text-primary/20\" strokeWidth={1} />\n            </div>\n\n            {/* Testimonial cards */}\n            <div className=\"relative h-[320px] md:h-[280px]\">\n              {testimonials.map((testimonial, index) => (\n                <Card\n                  key={testimonial.id}\n                  className={cn(\n                    \"absolute inset-0 transition-all duration-500 border\",\n                    index === activeIndex\n                      ? \"opacity-100 translate-x-0 shadow-lg\"\n                      : \"opacity-0 translate-x-[100px] pointer-events-none\",\n                  )}\n                >\n                  <CardContent className=\"p-6 md:p-8 h-full flex flex-col\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div className=\"flex items-center gap-4\">\n                        <Avatar className=\"h-12 w-12 border-2 border-primary/10\">\n                          <AvatarImage\n                            src={testimonial.avatar}\n                            alt={testimonial.name}\n                          />\n                          <AvatarFallback>\n                            {testimonial.name.charAt(0)}\n                          </AvatarFallback>\n                        </Avatar>\n                        <div className=\"text-left\">\n                          <h4 className=\"font-semibold\">{testimonial.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {testimonial.role}, {testimonial.company}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex\">\n                        {[...Array(testimonial.rating)].map((_, i) => (\n                          <Star\n                            key={i}\n                            className=\"h-4 w-4 fill-yellow-500 text-yellow-500\"\n                          />\n                        ))}\n                      </div>\n                    </div>\n\n                    <Separator className=\"my-4\" />\n\n                    <p className=\"flex-1 italic text-base/relaxed\">\n                      \"{testimonial.content}\"\n                    </p>\n\n                    {showVerifiedBadge && (\n                      <div className=\"mt-4 text-xs text-right text-muted-foreground\">\n                        Verified Customer\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Navigation buttons */}\n          <motion.div\n            variants={itemVariants}\n            className=\"flex md:flex-col gap-4 justify-center mt-8 md:mt-0\"\n          >\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={handlePrev}\n              className=\"rounded-full h-10 w-10\"\n              aria-label=\"Previous testimonial\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n\n            <div className=\"flex md:flex-col gap-2 items-center justify-center\">\n              {testimonials.map((_, index) => (\n                <div\n                  key={index}\n                  className={cn(\n                    \"w-2 h-2 rounded-full transition-colors\",\n                    index === activeIndex\n                      ? \"bg-primary\"\n                      : \"bg-muted-foreground/20\",\n                  )}\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setActiveIndex(index)}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \" \") {\n                      setActiveIndex(index);\n                    }\n                  }}\n                  aria-label={`Go to testimonial ${index + 1}`}\n                />\n              ))}\n            </div>\n\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={handleNext}\n              className=\"rounded-full h-10 w-10\"\n              aria-label=\"Next testimonial\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </motion.div>\n        </motion.div>\n\n        {/* Logo cloud - Updated to match TestimonialsSection */}\n        {trustedCompanies.length > 0 && (\n          <motion.div variants={itemVariants} className=\"mt-20 pt-10 border-t\">\n            <h3 className=\"text-sm font-medium text-muted-foreground text-center mb-8\">\n              {trustedCompaniesTitle}\n            </h3>\n            <div className=\"flex flex-wrap justify-center gap-x-12 gap-y-8\">\n              {trustedCompanies.map((company) => (\n                <div\n                  key={company}\n                  className=\"text-2xl font-semibold text-muted-foreground/50\"\n                >\n                  {company}\n                </div>\n              ))}\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </section>\n  );\n}",
      "type": "registry:block"
    }
  ]
}