{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "testimonial-one",
  "type": "registry:block",
  "title": "Testimonial One",
  "description": "A testimonial component with a single testimonial.",
  "author": "shaduxe-ui",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "registryDependencies": [
    "card",
    "badge",
    "button",
    "separator"
  ],
  "files": [
    {
      "path": "default/blocks/testimonial-one",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Quote, Star } from \"lucide-react\";\nimport { motion, useAnimation, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport interface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  company: string;\n  content: string;\n  rating: number;\n  avatar: string;\n}\n\nexport interface TestimonialOneProps {\n  className?: string;\n}\n\n// All data in a single config object\nconst testimonialsConfig = {\n  title: \"Loved by the community\",\n  subtitle:\n    \"Don't just take our word for it. See what developers and companies have to say about our starter template.\",\n  badgeText: \"Trusted by developers\",\n  testimonials: [\n    {\n      id: 1,\n      name: \"Alex Johnson\",\n      role: \"Full Stack Developer\",\n      company: \"TechFlow\",\n      content:\n        \"This starter template saved me weeks of setup time. The Supabase integration is flawless, and the UI components are beautiful and easy to customize. Worth every penny!\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\",\n    },\n    {\n      id: 2,\n      name: \"Sarah Miller\",\n      role: \"Frontend Engineer\",\n      company: \"DesignHub\",\n      content:\n        \"I've used many starter templates, but this one stands out for its clean architecture and attention to detail. The TypeScript support is excellent, and the documentation is comprehensive.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/44.jpg\",\n    },\n    {\n      id: 3,\n      name: \"Michael Chen\",\n      role: \"Product Manager\",\n      company: \"InnovateLabs\",\n      content:\n        \"Our team was able to launch our MVP in record time thanks to this template. The authentication flow and user management features worked right out of the box. Highly recommended!\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/46.jpg\",\n    },\n  ],\n  trustedCompanies: [\"Google\", \"Microsoft\", \"Airbnb\", \"Spotify\", \"Netflix\"],\n  autoRotateInterval: 6000,\n  trustedCompaniesTitle: \"Trusted by developers from companies worldwide\",\n};\n\nexport default function TestimonialOne({ className }: TestimonialOneProps) {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // Destructure config for easier access\n  const {\n    title,\n    subtitle,\n    badgeText,\n    testimonials,\n    autoRotateInterval,\n    trustedCompanies,\n    trustedCompaniesTitle,\n  } = testimonialsConfig;\n\n  // Refs for scroll animations\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const isInView = useInView(sectionRef, { once: true, amount: 0.2 });\n  const controls = useAnimation();\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  // Trigger animations when section comes into view\n  useEffect(() => {\n    if (isInView) {\n      controls.start(\"visible\");\n    }\n  }, [isInView, controls]);\n\n  // Auto rotate testimonials\n  useEffect(() => {\n    if (autoRotateInterval <= 0 || testimonials.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setActiveIndex((current) => (current + 1) % testimonials.length);\n    }, autoRotateInterval);\n\n    return () => clearInterval(interval);\n  }, [autoRotateInterval, testimonials.length]);\n\n  if (testimonials.length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      ref={sectionRef}\n      id=\"testimonials\"\n      className={`py-24 overflow-hidden ${className || \"\"}`}\n    >\n      <motion.div\n        initial=\"hidden\"\n        animate={controls}\n        variants={containerVariants}\n        className=\"grid grid-cols-1 gap-16 w-full md:grid-cols-2 lg:gap-24\"\n      >\n        {/* Left side: Heading and navigation */}\n        <motion.div\n          variants={itemVariants}\n          className=\"flex flex-col justify-center\"\n        >\n          <div className=\"space-y-6\">\n            {badgeText && (\n              <div className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary/10 text-primary\">\n                <Star className=\"mr-1 h-3.5 w-3.5 fill-primary\" />\n                <span>{badgeText}</span>\n              </div>\n            )}\n\n            <h2 className=\"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl\">\n              {title}\n            </h2>\n\n            <p className=\"max-w-[600px] text-muted-foreground md:text-xl/relaxed\">\n              {subtitle}\n            </p>\n\n            <div className=\"flex items-center gap-3 pt-4\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setActiveIndex(index)}\n                  className={`h-2.5 rounded-full transition-all duration-300 ${\n                    activeIndex === index\n                      ? \"w-10 bg-primary\"\n                      : \"w-2.5 bg-muted-foreground/30\"\n                  }`}\n                  aria-label={`View testimonial ${index + 1}`}\n                />\n              ))}\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Right side: Testimonial cards */}\n        <motion.div\n          variants={itemVariants}\n          className=\"relative h-full mr-10 min-h-[300px] md:min-h-[400px]\"\n        >\n          {testimonials.map((testimonial, index) => (\n            <motion.div\n              key={testimonial.id}\n              className=\"absolute inset-0\"\n              initial={{ opacity: 0, x: 100 }}\n              animate={{\n                opacity: activeIndex === index ? 1 : 0,\n                x: activeIndex === index ? 0 : 100,\n                scale: activeIndex === index ? 1 : 0.9,\n              }}\n              transition={{ duration: 0.5, ease: \"easeInOut\" }}\n              style={{ zIndex: activeIndex === index ? 10 : 0 }}\n            >\n              <div className=\"bg-card border shadow-lg rounded-xl p-8 h-full flex flex-col\">\n                <div className=\"mb-6 flex gap-2\">\n                  {Array(testimonial.rating)\n                    .fill(0)\n                    .map((_, i) => (\n                      <Star\n                        key={i}\n                        className=\"h-5 w-5 fill-yellow-500 text-yellow-500\"\n                      />\n                    ))}\n                </div>\n\n                <div className=\"relative mb-6 flex-1\">\n                  <Quote className=\"absolute -top-2 -left-2 h-8 w-8 text-primary/20 rotate-180\" />\n                  <p className=\"relative z-10 text-lg font-medium leading-relaxed\">\n                    \"{testimonial.content}\"\n                  </p>\n                </div>\n\n                <Separator className=\"my-4\" />\n\n                <div className=\"flex items-center gap-4\">\n                  <Avatar className=\"h-12 w-12 border\">\n                    <AvatarImage\n                      src={testimonial.avatar}\n                      alt={testimonial.name}\n                    />\n                    <AvatarFallback>\n                      {testimonial.name.charAt(0)}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <h3 className=\"font-semibold\">{testimonial.name}</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {testimonial.role}, {testimonial.company}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n\n          {/* Decorative elements */}\n          <div className=\"absolute -bottom-6 -left-6 h-24 w-24 rounded-xl bg-primary/5\"></div>\n          <div className=\"absolute -top-6 -right-6 h-24 w-24 rounded-xl bg-primary/5\"></div>\n        </motion.div>\n      </motion.div>\n\n      {/* Logo cloud */}\n      {trustedCompanies.length > 0 && (\n        <motion.div\n          variants={itemVariants}\n          initial=\"hidden\"\n          animate={controls}\n          className=\"mt-24 text-center\"\n        >\n          <h3 className=\"text-sm font-medium text-muted-foreground mb-8\">\n            {trustedCompaniesTitle}\n          </h3>\n          <div className=\"flex flex-wrap justify-center gap-x-12 gap-y-8\">\n            {trustedCompanies.map((company) => (\n              <div\n                key={company}\n                className=\"text-2xl font-semibold text-muted-foreground/50\"\n              >\n                {company}\n              </div>\n            ))}\n          </div>\n        </motion.div>\n      )}\n    </section>\n  );\n}",
      "type": "registry:block"
    }
  ]
}