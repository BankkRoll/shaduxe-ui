{
  "accordion": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "accordion",
    "type": "registry:ui",
    "title": "Accordion",
    "description": "A vertically stacked set of headers that each contain a title, content, and controls.",
    "author": "shaduxe-ui",
    "dependencies": [
      "@radix-ui/react-accordion",
      "class-variance-authority",
      "lucide-react"
    ],
    "files": [
      {
        "path": "default/ui/accordion",
        "content": "\"use client\";\n\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { ChevronDownIcon } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst accordionVariants = cva(\n  \"flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all outline-none disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:underline\",\n        outline: \"border border-input p-3 hover:bg-accent\",\n        ghost: \"hover:bg-accent p-3\",\n        underline: \"border-b border-input pb-3 hover:border-primary\",\n      },\n      iconPosition: {\n        right: \"flex-row\",\n        left: \"flex-row-reverse\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      iconPosition: \"right\",\n    },\n  },\n);\n\ntype AccordionTriggerProps = React.ComponentProps<\n  typeof AccordionPrimitive.Trigger\n> &\n  React.PropsWithChildren<{\n    icon?: React.ReactNode;\n  }> &\n  VariantProps<typeof accordionVariants>;\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />;\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"border-b last:border-b-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  variant,\n  iconPosition,\n  icon,\n  ...props\n}: AccordionTriggerProps) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(\n          \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n          accordionVariants({ variant, iconPosition }),\n          className,\n        )}\n        {...props}\n      >\n        {children}\n        {icon || (\n          <ChevronDownIcon className=\"text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200\" />\n        )}\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  );\n}\n\nconst accordionContentVariants = cva(\"overflow-hidden text-sm\", {\n  variants: {\n    variant: {\n      default: \"\",\n      outline: \"px-3\",\n      ghost: \"px-3\",\n      underline: \"\",\n    },\n    animation: {\n      default:\n        \"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\",\n      fade: \"data-[state=closed]:animate-fade-out data-[state=open]:animate-fade-in\",\n      none: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    animation: \"default\",\n  },\n});\n\ntype AccordionContentProps = React.ComponentProps<\n  typeof AccordionPrimitive.Content\n> &\n  VariantProps<typeof accordionContentVariants>;\n\nfunction AccordionContent({\n  className,\n  children,\n  variant,\n  animation,\n  ...props\n}: AccordionContentProps) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className={cn(\n        accordionContentVariants({ variant, animation }),\n        className,\n      )}\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\n    </AccordionPrimitive.Content>\n  );\n}\n\nexport {\n  Accordion,\n  AccordionContent,\n  accordionContentVariants,\n  AccordionItem,\n  AccordionTrigger,\n  accordionVariants,\n};",
        "type": "registry:ui"
      }
    ],
    "cssVars": {
      "theme": {
        "--animate-accordion-down": "accordion-down 0.2s ease-out",
        "--animate-accordion-up": "accordion-up 0.2s ease-out"
      }
    },
    "css": {
      "@keyframes accordion-down": {
        "from": {
          "height": 0
        },
        "to": {
          "height": "var(--radix-accordion-content-height)"
        }
      },
      "@keyframes accordion-up": {
        "from": {
          "height": "var(--radix-accordion-content-height)"
        },
        "to": {
          "height": 0
        }
      }
    }
  },
  "alert": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "alert",
    "type": "registry:ui",
    "title": "Alert",
    "description": "A component that displays a message to the user.",
    "author": "shaduxe-ui",
    "dependencies": [
      "class-variance-authority"
    ],
    "files": [
      {
        "path": "default/ui/alert",
        "content": "import { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n        success:\n          \"border-green-200 bg-green-50 text-green-800 dark:border-green-800 dark:bg-green-950/50 dark:text-green-300 [&>svg]:text-green-500 dark:[&>svg]:text-green-400\",\n        warning:\n          \"border-yellow-200 bg-yellow-50 text-yellow-800 dark:border-yellow-800 dark:bg-yellow-950/50 dark:text-yellow-300 [&>svg]:text-yellow-500 dark:[&>svg]:text-yellow-400\",\n        info: \"border-blue-200 bg-blue-50 text-blue-800 dark:border-blue-800 dark:bg-blue-950/50 dark:text-blue-300 [&>svg]:text-blue-500 dark:[&>svg]:text-blue-400\",\n        outline: \"border-border bg-transparent\",\n      },\n      size: {\n        sm: \"px-3 py-2 text-xs\",\n        default: \"px-4 py-3 text-sm\",\n        lg: \"px-6 py-4 text-base\",\n      },\n      withIcon: {\n        true: \"has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] has-[>svg]:gap-x-3\",\n        false: \"grid-cols-[0_1fr]\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      withIcon: true,\n    },\n  },\n);\n\ninterface AlertProps\n  extends React.ComponentProps<\"div\">,\n    VariantProps<typeof alertVariants> {\n  icon?: React.ReactNode;\n}\n\nfunction Alert({\n  className,\n  variant,\n  size,\n  withIcon,\n  icon,\n  ...props\n}: AlertProps) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant, size, withIcon }), className)}\n      {...props}\n    >\n      {icon}\n      {props.children}\n    </div>\n  );\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Alert, AlertDescription, AlertTitle };",
        "type": "registry:ui"
      }
    ]
  },
  "avatar": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "avatar",
    "type": "registry:ui",
    "title": "Avatar",
    "description": "An image element with a fallback for representing the user.",
    "author": "shaduxe-ui",
    "dependencies": [
      "@radix-ui/react-avatar",
      "class-variance-authority"
    ],
    "files": [
      {
        "path": "default/ui/avatar",
        "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst avatarVariants = cva(\"relative flex shrink-0 overflow-hidden\", {\n  variants: {\n    variant: {\n      circle: \"rounded-full\",\n      square: \"rounded-none\",\n      rounded: \"rounded-md\",\n    },\n    size: {\n      icon: \"size-4\",\n      xs: \"size-6\",\n      sm: \"size-8\",\n      default: \"size-9\",\n      md: \"size-10\",\n      lg: \"size-12\",\n      xl: \"size-16\",\n      \"2xl\": \"size-20\",\n    },\n  },\n  defaultVariants: {\n    variant: \"circle\",\n    size: \"default\",\n  },\n});\n\nconst avatarImageVariants = cva(\"aspect-square size-full\", {\n  variants: {\n    variant: {\n      circle: \"rounded-full\",\n      square: \"rounded-none\",\n      rounded: \"rounded-md\",\n    },\n  },\n  defaultVariants: {\n    variant: \"circle\",\n  },\n});\n\nexport interface AvatarProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof avatarVariants> {}\n\nfunction Avatar({ className, variant, size, ...props }: AvatarProps) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(avatarVariants({ variant, size }), className)}\n      {...props}\n    >\n      {React.Children.map(props.children, (child) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child as React.ReactElement<any>, {\n              variant,\n              className: cn(\n                (child as React.ReactElement<any>).props.className,\n                avatarImageVariants({ variant }),\n              ),\n            })\n          : child,\n      )}\n    </AvatarPrimitive.Root>\n  );\n}\n\nexport interface AvatarImageProps\n  extends React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image> {\n  variant?: VariantProps<typeof avatarVariants>[\"variant\"];\n}\n\nfunction AvatarImage({ className, variant, ...props }: AvatarImageProps) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(avatarImageVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"flex size-full items-center justify-center bg-muted\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Avatar, AvatarFallback, AvatarImage };",
        "type": "registry:ui"
      }
    ]
  },
  "badge": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "badge",
    "type": "registry:ui",
    "title": "Badge",
    "description": "A label that can be used to indicate a status or category.",
    "author": "shaduxe-ui",
    "dependencies": [
      "class-variance-authority"
    ],
    "files": [
      {
        "path": "default/ui/badge",
        "content": "import { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        ghost: \"border-transparent hover:bg-muted hover:text-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline border-transparent\",\n        success:\n          \"border-transparent bg-green-500 text-white shadow hover:bg-green-500/80\",\n        warning:\n          \"border-transparent bg-yellow-500 text-white shadow hover:bg-yellow-500/80\",\n        info: \"border-transparent bg-blue-500 text-white shadow hover:bg-blue-500/80\",\n      },\n      size: {\n        icon: \"h-4 w-4 text-[8px] p-0.5\",\n        xs: \"h-5 text-[10px] px-1.5 py-0.5\",\n        sm: \"h-6 text-xs px-1.5 py-0.5\",\n        md: \"h-7 text-xs px-2 py-0.5\",\n        default: \"h-8 text-sm px-2.5 py-0.5\",\n        lg: \"h-8 text-sm px-3 py-0.75\",\n        xl: \"h-9 text-base px-3.5 py-1\",\n        \"2xl\": \"h-10 text-lg px-4 py-1\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, size, ...props }: BadgeProps) {\n  return (\n    <div\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant, size }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };",
        "type": "registry:ui"
      }
    ]
  },
  "button": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "button",
    "type": "registry:ui",
    "title": "Button",
    "description": "Interactive button with multiple variants and animations.",
    "author": "shaduxe-ui",
    "dependencies": [
      "@radix-ui/react-slot",
      "class-variance-authority"
    ],
    "files": [
      {
        "path": "default/ui/button",
        "content": "import { cn } from \"@/lib/utils\";\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      effect: {\n        expandIcon: \"group gap-0 relative\",\n        ringHover:\n          \"transition-all duration-300 hover:ring-2 hover:ring-primary/90 hover:ring-offset-2\",\n        ringHoverOutline:\n          \"border border-input bg-transparent hover:bg-transparent text-foreground transition-all duration-300 hover:ring-2 hover:ring-primary/90 hover:ring-offset-2\",\n        shine:\n          \"relative overflow-hidden before:absolute before:inset-0 before:rounded-[inherit] before:bg-[linear-gradient(45deg,transparent_25%,rgba(255,255,255,0.5)_50%,transparent_75%,transparent_100%)] before:bg-[length:250%_250%,100%_100%] before:bg-[position:200%_0,0_0] before:bg-no-repeat before:transition-[background-position_0s_ease] hover:before:bg-[position:-100%_0,0_0] before:duration-1000\",\n        gooeyRight:\n          \"relative z-0 overflow-hidden transition-all duration-500 before:absolute before:inset-0 before:-z-10 before:translate-x-[150%] before:translate-y-[150%] before:scale-[2.5] before:rounded-[100%] before:bg-gradient-to-r before:from-white/40 dark:before:from-black/20 before:transition-transform before:duration-1000 hover:before:translate-x-[0%] hover:before:translate-y-[0%]\",\n        gooeyLeft:\n          \"relative z-0 overflow-hidden transition-all duration-500 after:absolute after:inset-0 after:-z-10 after:translate-x-[-150%] after:translate-y-[150%] after:scale-[2.5] after:rounded-[100%] after:bg-gradient-to-l after:from-white/40 dark:after:from-black/20 after:transition-transform after:duration-1000 hover:after:translate-x-[0%] hover:after:translate-y-[0%]\",\n        underline:\n          \"relative !no-underline after:absolute after:bg-primary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-left after:scale-x-100 hover:after:origin-bottom-right hover:after:scale-x-0 after:transition-transform after:ease-in-out after:duration-300\",\n        hoverUnderline:\n          \"relative !no-underline after:absolute after:bg-primary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-right after:scale-x-0 hover:after:origin-bottom-left hover:after:scale-x-100 after:transition-transform after:ease-in-out after:duration-300\",\n      },\n      size: {\n        icon: \"h-9 w-9 p-0\",\n        xs: \"h-6 px-2 text-xs\",\n        sm: \"h-8 px-3 text-sm\",\n        md: \"h-8 px-4 text-sm\",\n        default: \"h-9 px-4 py-2\",\n        lg: \"h-9 px-6 text-base\",\n        xl: \"h-10 px-8 text-lg\",\n        \"2xl\": \"h-12 px-10 text-xl\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\ninterface IconProps {\n  Icon: React.ElementType;\n  iconPlacement: \"left\" | \"right\";\n}\n\ninterface IconRefProps {\n  Icon?: never;\n  iconPlacement?: undefined;\n}\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nexport type ButtonIconProps = IconProps | IconRefProps;\n\nconst Button = React.forwardRef<\n  HTMLButtonElement,\n  ButtonProps & ButtonIconProps\n>(\n  (\n    {\n      className,\n      variant,\n      effect,\n      size,\n      asChild = false,\n      Icon,\n      iconPlacement,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        data-slot=\"button\"\n        className={cn(buttonVariants({ variant, effect, size, className }))}\n        ref={ref}\n        {...props}\n      >\n        {Icon &&\n          iconPlacement === \"left\" &&\n          (effect === \"expandIcon\" ? (\n            <div className=\"w-0 translate-x-[0%] pr-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-100 group-hover:pr-2 group-hover:opacity-100\">\n              <Icon />\n            </div>\n          ) : (\n            <Icon />\n          ))}\n        <Slottable>{props.children}</Slottable>\n        {Icon &&\n          iconPlacement === \"right\" &&\n          (effect === \"expandIcon\" ? (\n            <div className=\"w-0 translate-x-[100%] pl-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-0 group-hover:pl-2 group-hover:opacity-100\">\n              <Icon />\n            </div>\n          ) : (\n            <Icon />\n          ))}\n      </Comp>\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };",
        "type": "registry:ui"
      }
    ]
  },
  "card": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "card",
    "type": "registry:ui",
    "title": "Card",
    "description": "Card component with various styles.",
    "author": "shaduxe-ui",
    "dependencies": [
      "class-variance-authority"
    ],
    "files": [
      {
        "path": "default/ui/card",
        "content": "import { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst cardVariants = cva(\"rounded-xl text-card-foreground\", {\n  variants: {\n    variant: {\n      default: \"bg-card border shadow\",\n      ghost: \"bg-transparent\",\n      outline: \"border bg-transparent\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof cardVariants> {}\n\nfunction Card({ className, variant, ...props }: CardProps) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(cardVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLHeadingElement>) {\n  return (\n    <h3\n      data-slot=\"card-title\"\n      className={cn(\"font-semibold leading-none tracking-tight\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLParagraphElement>) {\n  return (\n    <p\n      data-slot=\"card-description\"\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"p-6 pt-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center p-6 pt-0\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  cardVariants,\n};",
        "type": "registry:ui"
      }
    ]
  },
  "input": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "input",
    "type": "registry:ui",
    "title": "Input",
    "description": "Form input component with various styles and icon support.",
    "author": "shaduxe-ui",
    "dependencies": [
      "@radix-ui/react-slot",
      "class-variance-authority"
    ],
    "files": [
      {
        "path": "default/ui/input",
        "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst inputVariants = cva(\n  \"flex px-2 w-full rounded-md text-sm transition-all file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border border-input bg-background shadow-sm focus-visible:ring-1 focus-visible:ring-ring\",\n        underline:\n          \"border-b border-input bg-transparent px-0 focus-visible:border-primary rounded-none focus-visible:ring-0 focus-visible:outline-none transition-colors duration-200\",\n        pill: \"rounded-full border border-input bg-background px-6 focus-visible:ring-1 focus-visible:ring-ring\",\n      },\n      inputSize: {\n        xs: \"h-7 text-xs\",\n        sm: \"h-8 text-sm\",\n        md: \"h-9 text-sm\",\n        lg: \"h-10 text-base\",\n        xl: \"h-11 text-lg\",\n        \"2xl\": \"h-12 text-xl\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      inputSize: \"md\",\n    },\n  },\n);\n\ninterface IconProps {\n  Icon: React.ElementType;\n  iconPlacement: \"left\" | \"right\";\n}\n\ninterface IconlessProps {\n  Icon?: never;\n  iconPlacement?: undefined;\n}\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\n    VariantProps<typeof inputVariants> {\n  asChild?: boolean;\n}\n\nexport type InputIconProps = IconProps | IconlessProps;\n\nfunction Input({\n  className,\n  variant,\n  inputSize,\n  asChild = false,\n  type,\n  Icon,\n  iconPlacement,\n  ...props\n}: InputProps & InputIconProps) {\n  const Comp = asChild ? Slot : \"input\";\n\n  const inputClassName = cn(\n    inputVariants({ variant, inputSize, className }),\n    Icon && (iconPlacement === \"left\" ? \"pl-8\" : \"pr-8\"),\n  );\n\n  return (\n    <div className=\"relative\">\n      {Icon && (\n        <div\n          className={cn(\n            \"absolute top-1/2 transform -translate-y-1/2 text-muted-foreground pointer-events-none\",\n            iconPlacement === \"left\" ? \"left-2\" : \"right-2\",\n          )}\n        >\n          <Icon className=\"w-5 h-5\" />\n        </div>\n      )}\n      <Comp\n        data-slot=\"input\"\n        type={type}\n        className={inputClassName}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport { Input, inputVariants };",
        "type": "registry:ui"
      }
    ]
  },
  "mode-toggle": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "mode-toggle",
    "type": "registry:ui",
    "title": "Mode Toggle",
    "description": "A toggle for switching between light and dark modes.",
    "author": "shaduxe-ui",
    "dependencies": [
      "next-themes",
      "@radix-ui/react-icons"
    ],
    "registryDependencies": [
      "button"
    ],
    "files": [
      {
        "path": "default/ui/mode-toggle",
        "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { MoonIcon, SunIcon } from \"@radix-ui/react-icons\";\nimport { useTheme } from \"next-themes\";\nimport React from \"react\";\n\nexport function ModeToggle({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Button> & { className?: string }) {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <Button\n      data-slot=\"mode-toggle\"\n      variant=\"outline\"\n      type=\"button\"\n      size=\"icon\"\n      className={cn(\"cursor-pointer px-2\", className)}\n      aria-label=\"Toggle theme\"\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n      {...props}\n    >\n      <SunIcon className=\"size-[1.2rem] text-neutral-800 dark:hidden dark:text-neutral-200\" />\n      <MoonIcon className=\"hidden size-[1.2rem] text-neutral-800 dark:block dark:text-neutral-200\" />\n    </Button>\n  );\n}\n\nexport default ModeToggle;",
        "type": "registry:ui"
      }
    ]
  },
  "switch": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "switch",
    "type": "registry:ui",
    "title": "Switch",
    "description": "A control that allows the user to toggle between checked and not checked.",
    "author": "shaduxe-ui",
    "dependencies": [
      "@radix-ui/react-switch",
      "class-variance-authority",
      "lucide-react"
    ],
    "files": [
      {
        "path": "default/ui/switch",
        "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { Moon, Sun } from \"lucide-react\";\nimport * as React from \"react\";\n\nconst switchVariants = cva(\n  \"peer inline-flex shrink-0 cursor-pointer items-center border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n  {\n    variants: {\n      variant: {\n        default: \"rounded\",\n        rounded: \"rounded-full\",\n        square: \"rounded-none\",\n        ios: \"rounded-full data-[state=checked]:bg-green-400\",\n      },\n      size: {\n        icon: \"h-4 w-4\",\n        xs: \"h-3 w-5\",\n        sm: \"h-4 w-7\",\n        md: \"h-5 w-9\",\n        lg: \"h-6 w-11\",\n        xl: \"h-7 w-13\",\n        \"2xl\": \"h-8 w-15\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nconst switchThumbVariants = cva(\n  \"pointer-events-none block bg-background shadow-lg ring-0 transition-transform data-[state=unchecked]:translate-x-0\",\n  {\n    variants: {\n      variant: {\n        default: \"rounded\",\n        rounded: \"rounded-full\",\n        square: \"rounded-none\",\n        ios: \"rounded-full shadow-md\",\n      },\n      size: {\n        icon: \"h-3 w-3 data-[state=checked]:translate-x-0\",\n        xs: \"h-2 w-2 data-[state=checked]:translate-x-2\",\n        sm: \"h-3 w-3 data-[state=checked]:translate-x-3\",\n        md: \"h-4 w-4 data-[state=checked]:translate-x-4\",\n        lg: \"h-5 w-5 data-[state=checked]:translate-x-5\",\n        xl: \"h-6 w-6 data-[state=checked]:translate-x-6\",\n        \"2xl\": \"h-7 w-7 data-[state=checked]:translate-x-7\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface SwitchProps\n  extends React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>,\n    VariantProps<typeof switchVariants> {\n  thumbVariant?: VariantProps<typeof switchThumbVariants>[\"variant\"];\n  showLabels?: boolean;\n  labelOn?: string;\n  labelOff?: string;\n  showIcons?: boolean;\n}\n\nfunction Switch({\n  className,\n  variant,\n  size,\n  thumbVariant,\n  showLabels,\n  labelOn = \"On\",\n  labelOff = \"Off\",\n  showIcons,\n  checked,\n  defaultChecked,\n  onCheckedChange,\n  ...props\n}: SwitchProps) {\n  const iconSize = React.useMemo(() => {\n    switch (size) {\n      case \"icon\":\n        return 12;\n      case \"xs\":\n        return 8;\n      case \"sm\":\n        return 10;\n      case \"md\":\n        return 12;\n      case \"lg\":\n        return 14;\n      default:\n        return 12;\n    }\n  }, [size]);\n\n  const [internalChecked, setInternalChecked] = React.useState(\n    defaultChecked || false,\n  );\n\n  const isControlled = checked !== undefined;\n  const isChecked = isControlled ? checked : internalChecked;\n\n  const handleCheckedChange = (newChecked: boolean) => {\n    if (!isControlled) {\n      setInternalChecked(newChecked);\n    }\n    onCheckedChange?.(newChecked);\n  };\n\n  return (\n    <div className=\"inline-flex items-center\">\n      {showLabels && (\n        <span\n          className={cn(\n            \"mr-2 text-sm\",\n            isChecked ? \"text-primary/80\" : \"text-primary\",\n          )}\n        >\n          {labelOff}\n        </span>\n      )}\n      <SwitchPrimitives.Root\n        data-slot=\"switch\"\n        className={cn(switchVariants({ variant, size, className }))}\n        checked={isChecked}\n        onCheckedChange={handleCheckedChange}\n        {...props}\n      >\n        <SwitchPrimitives.Thumb\n          className={cn(\n            switchThumbVariants({\n              variant: thumbVariant || variant,\n              size,\n            }),\n            \"flex items-center justify-center\",\n          )}\n        >\n          {showIcons &&\n            (isChecked ? <Sun size={iconSize} /> : <Moon size={iconSize} />)}\n        </SwitchPrimitives.Thumb>\n      </SwitchPrimitives.Root>\n      {showLabels && (\n        <span\n          className={cn(\n            \"ml-2 text-sm\",\n            isChecked ? \"text-primary\" : \"text-primary/80\",\n          )}\n        >\n          {labelOn}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport { Switch };",
        "type": "registry:ui"
      }
    ]
  },
  "tabs": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "tabs",
    "type": "registry:ui",
    "title": "Tabs",
    "description": "A set of layered sections of content that display one panel at a time.",
    "author": "shaduxe-ui",
    "dependencies": [
      "@radix-ui/react-tabs",
      "class-variance-authority"
    ],
    "files": [
      {
        "path": "default/ui/tabs",
        "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst tabsVariants = cva(\"\", {\n  variants: {\n    variant: {\n      default: \"\",\n      underline: \"\",\n      pill: \"\",\n      rounded: \"\",\n      folder: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\nconst tabsListVariants = cva(\n  \"inline-flex items-center justify-center text-muted-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-muted p-1 rounded-md\",\n        underline:\n          \"space-x-6 bg-transparent space-x-4 p-0 border-b rounded-none\",\n        pill: \"bg-transparent p-0 gap-0.5\",\n        rounded: \"bg-muted p-2 rounded-full\",\n        folder: \"space-x-1 border-b\",\n      },\n    },\n  },\n);\n\nconst tabsTriggerVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"rounded-sm data-[state=active]:bg-background data-[state=inactive]:hover:bg-primary/5 data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n        underline:\n          \"rounded-none data-[state=active]:bg-transparent data-[state=active]:text-foreground data-[state=active]:shadow-none border-b-2 border-transparent data-[state=active]:border-primary data-[state=inactive]:hover:text-foreground\",\n        pill: \"data-[state=active]:bg-primary data-[state=inactive]:bg-muted data-[state=inactive]:hover:bg-primary/20 data-[state=active]:text-primary-foreground  first:rounded-l-full last:rounded-r-full data-[state=active]:shadow-sm\",\n        rounded:\n          \"rounded-full data-[state=active]:bg-primary data-[state=inactive]:hover:bg-primary/5 data-[state=active]:text-primary-foreground\",\n        folder:\n          \"h-9 px-3 rounded-t-lg -mb-[2px] transition-all duration-200 ease-in-out border border-transparent data-[state=inactive]:hover:bg-muted data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:border-border data-[state=active]:border-b-transparent hover:data-[state=active]:border-b-transparent\",\n      },\n    },\n  },\n);\n\nexport interface TabsProps\n  extends React.ComponentPropsWithoutRef<typeof TabsPrimitive.Root>,\n    VariantProps<typeof tabsVariants> {}\n\nconst TabsContext = React.createContext<VariantProps<typeof tabsVariants>>({\n  variant: \"default\",\n});\n\nfunction Tabs({ className, variant = \"default\", ...props }: TabsProps) {\n  return (\n    <TabsContext.Provider value={{ variant }}>\n      <TabsPrimitive.Root\n        data-slot=\"tabs\"\n        className={cn(tabsVariants({ variant, className }))}\n        {...props}\n      />\n    </TabsContext.Provider>\n  );\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>) {\n  const { variant } = React.useContext(TabsContext);\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(tabsListVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>) {\n  const { variant } = React.useContext(TabsContext);\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(tabsTriggerVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\n        \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };",
        "type": "registry:ui"
      }
    ]
  },
  "accordion-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "accordion-demo",
    "type": "registry:ui",
    "title": "Accordion Demo",
    "description": "Examples showcasing accordion component variants and sizes.",
    "author": "shaduxe-ui",
    "dependencies": [
      "lucide-react"
    ],
    "registryDependencies": [
      "accordion"
    ],
    "files": [
      {
        "path": "default/example/accordion-demo",
        "content": "import { AlertCircle, ChevronRight, Plus } from \"lucide-react\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"../ui/accordion\";\n\n// Basic demo\nexport function AccordionDemo() {\n  return (\n    <Accordion type=\"single\" collapsible className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Is it accessible?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It adheres to the WAI-ARIA design pattern.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Is it styled?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It comes with default styles that match the other components'\n          aesthetic.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Is it animated?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It's animated by default, but you can disable it if you prefer.\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n\n// All variants demo\nexport function AccordionVariants() {\n  return (\n    <div className=\"grid gap-6 w-full\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Default Variant</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger variant=\"default\">\n              Default Variant\n            </AccordionTrigger>\n            <AccordionContent>\n              This is the default accordion style with hover underline.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Outline Variant</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger variant=\"outline\">\n              Outline Variant\n            </AccordionTrigger>\n            <AccordionContent variant=\"outline\">\n              This accordion has a border around the trigger and aligned content\n              padding.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Ghost Variant</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger variant=\"ghost\">Ghost Variant</AccordionTrigger>\n            <AccordionContent variant=\"ghost\">\n              This accordion has a background color on hover.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Underline Variant</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger variant=\"underline\">\n              Underline Variant\n            </AccordionTrigger>\n            <AccordionContent>\n              This accordion has a bottom border with hover effect.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n\n// Multiple demo\nexport function AccordionMultiple() {\n  return (\n    <Accordion type=\"multiple\" className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Can I select multiple items?</AccordionTrigger>\n        <AccordionContent>\n          Yes. You can select multiple items by setting the type prop to\n          \"multiple\".\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Can I close all items?</AccordionTrigger>\n        <AccordionContent>\n          Yes. You can close all items by clicking on the open ones.\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n\n// Icon position\nexport function AccordionIconPosition() {\n  return (\n    <div className=\"grid gap-6\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Right Icon (Default)</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger iconPosition=\"right\">\n              Icon on Right Side\n            </AccordionTrigger>\n            <AccordionContent>\n              This accordion has the chevron icon on the right (default).\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Left Icon</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger iconPosition=\"left\">\n              Icon on Left Side\n            </AccordionTrigger>\n            <AccordionContent>\n              This accordion has the chevron icon on the left.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n\n// Custom Icons\nexport function AccordionCustomIcons() {\n  return (\n    <div className=\"grid gap-6\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Plus Icon</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger icon={<Plus className=\"h-4 w-4 text-primary\" />}>\n              Custom Plus Icon\n            </AccordionTrigger>\n            <AccordionContent>\n              This accordion uses a plus icon instead of the default chevron.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Arrow Icon</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger\n              icon={<ChevronRight className=\"h-4 w-4 text-primary\" />}\n            >\n              Custom Arrow Icon\n            </AccordionTrigger>\n            <AccordionContent>\n              This accordion uses a right arrow icon instead of the default down\n              chevron.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Alert Icon</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger\n              variant=\"ghost\"\n              icon={<AlertCircle className=\"h-4 w-4 text-red-500\" />}\n            >\n              Important Information\n            </AccordionTrigger>\n            <AccordionContent>\n              This accordion highlights important information with an alert\n              icon.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n\n// Animation Variants\nexport function AccordionAnimations() {\n  return (\n    <div className=\"grid gap-6\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Default Animation</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger>Default Animation</AccordionTrigger>\n            <AccordionContent animation=\"default\">\n              This accordion uses the default slide animation.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Fade Animation</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger>Fade Animation</AccordionTrigger>\n            <AccordionContent animation=\"fade\">\n              This accordion uses a fade in/out animation.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">No Animation</h4>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger>No Animation</AccordionTrigger>\n            <AccordionContent animation=\"none\">\n              This accordion has no animation for instant visibility.\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n\n// Export all variants\nexport const accordionDemos = {\n  demo: AccordionDemo,\n  variants: AccordionVariants,\n  multiple: AccordionMultiple,\n  iconPosition: AccordionIconPosition,\n  customIcons: AccordionCustomIcons,\n  animations: AccordionAnimations,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of accordion",
        "component": "AccordionDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of accordion",
        "component": "AccordionVariants"
      },
      "multiple": {
        "name": "multiple",
        "description": "multiple variant of accordion",
        "component": "AccordionMultiple"
      },
      "iconPosition": {
        "name": "iconPosition",
        "description": "iconPosition variant of accordion",
        "component": "AccordionIconPosition"
      },
      "customIcons": {
        "name": "customIcons",
        "description": "customIcons variant of accordion",
        "component": "AccordionCustomIcons"
      },
      "animations": {
        "name": "animations",
        "description": "animations variant of accordion",
        "component": "AccordionAnimations"
      }
    }
  },
  "alert-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "alert-demo",
    "type": "registry:ui",
    "title": "Alert Demo",
    "description": "Examples showcasing alert component variants and sizes.",
    "author": "shaduxe-ui",
    "dependencies": [
      "lucide-react"
    ],
    "registryDependencies": [
      "alert"
    ],
    "files": [
      {
        "path": "default/example/alert-demo",
        "content": "import { AlertCircle, AlertTriangle, CheckCircle, Info } from \"lucide-react\";\nimport { Alert, AlertDescription, AlertTitle } from \"../ui/alert\";\n\n// Basic demo\nexport function AlertDemo() {\n  return (\n    <Alert>\n      <AlertTitle>Heads up!</AlertTitle>\n      <AlertDescription>\n        You can add components to your app using the cli.\n      </AlertDescription>\n    </Alert>\n  );\n}\n\n// All variants in a responsive grid\nexport function AlertVariants() {\n  return (\n    <div className=\"grid gap-4\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Default Alert</h4>\n        <Alert>\n          <AlertCircle />\n          <AlertTitle>Default Alert</AlertTitle>\n          <AlertDescription>\n            This is a default alert with an icon.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Destructive Alert</h4>\n        <Alert variant=\"destructive\">\n          <AlertCircle />\n          <AlertTitle>Destructive Alert</AlertTitle>\n          <AlertDescription>\n            This is a destructive alert for critical errors or warnings.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Success Alert</h4>\n        <Alert variant=\"success\">\n          <CheckCircle />\n          <AlertTitle>Success Alert</AlertTitle>\n          <AlertDescription>\n            Your changes have been saved successfully.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Warning Alert</h4>\n        <Alert variant=\"warning\">\n          <AlertTriangle />\n          <AlertTitle>Warning Alert</AlertTitle>\n          <AlertDescription>\n            Please be careful with these settings.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Info Alert</h4>\n        <Alert variant=\"info\">\n          <Info />\n          <AlertTitle>Info Alert</AlertTitle>\n          <AlertDescription>\n            This is an informative alert with additional details.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Outline Alert</h4>\n        <Alert variant=\"outline\">\n          <Info />\n          <AlertTitle>Outline Alert</AlertTitle>\n          <AlertDescription>\n            This alert has a simple outline style.\n          </AlertDescription>\n        </Alert>\n      </div>\n    </div>\n  );\n}\n\n// Sizes demo\nexport function AlertSizes() {\n  return (\n    <div className=\"grid gap-4\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Small Alert</h4>\n        <Alert size=\"sm\">\n          <Info />\n          <AlertTitle>Small Alert</AlertTitle>\n          <AlertDescription>\n            This is a small alert with compact sizing.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Default Size Alert</h4>\n        <Alert>\n          <Info />\n          <AlertTitle>Default Size Alert</AlertTitle>\n          <AlertDescription>This is a default size alert.</AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Large Alert</h4>\n        <Alert size=\"lg\">\n          <Info />\n          <AlertTitle>Large Alert</AlertTitle>\n          <AlertDescription>\n            This is a large alert with more padding.\n          </AlertDescription>\n        </Alert>\n      </div>\n    </div>\n  );\n}\n\n// Without Icon\nexport function AlertWithoutIcon() {\n  return (\n    <div className=\"grid gap-4\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Alert Without Icon</h4>\n        <Alert withIcon={false}>\n          <AlertTitle>No Icon</AlertTitle>\n          <AlertDescription>\n            This alert doesn't have an icon and adjusts its layout accordingly.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Alert With Custom Icon</h4>\n        <Alert icon={<Info className=\"text-blue-500 h-6 w-6\" />}>\n          <AlertTitle>Custom Icon</AlertTitle>\n          <AlertDescription>\n            This alert has a custom styled icon.\n          </AlertDescription>\n        </Alert>\n      </div>\n    </div>\n  );\n}\n\n// Export all variants\nexport const alertDemos = {\n  demo: AlertDemo,\n  variants: AlertVariants,\n  sizes: AlertSizes,\n  withoutIcon: AlertWithoutIcon,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of alert",
        "component": "AlertDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of alert",
        "component": "AlertVariants"
      },
      "sizes": {
        "name": "sizes",
        "description": "sizes variant of alert",
        "component": "AlertSizes"
      },
      "withoutIcon": {
        "name": "withoutIcon",
        "description": "withoutIcon variant of alert",
        "component": "AlertWithoutIcon"
      }
    }
  },
  "avatar-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "avatar-demo",
    "type": "registry:ui",
    "title": "Avatar Demo",
    "description": "Examples showcasing avatar component variants and sizes.",
    "author": "shaduxe-ui",
    "registryDependencies": [
      "avatar"
    ],
    "files": [
      {
        "path": "default/example/avatar-demo",
        "content": "import { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\n\n// Basic demo\nexport function AvatarDemo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Avatar>\n        <AvatarImage src=\"https://github.com/BankkRoll.png\" alt=\"@BankkRoll\" />\n        <AvatarFallback>CN</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}\n\n// All variants and sizes in a responsive grid\nexport function AvatarVariants() {\n  // All variants and sizes\n  const variants = [\"circle\", \"square\", \"rounded\"] as const;\n  const sizes = [\"icon\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"] as const;\n\n  return (\n    <div className=\"grid gap-8 p-2\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        {sizes.map((size) =>\n          variants.map((variant) => (\n            <div\n              key={`${variant}-${size}`}\n              className=\"flex flex-col items-center gap-2\"\n            >\n              <Avatar variant={variant} size={size}>\n                <AvatarImage\n                  src=\"https://github.com/BankkRoll.png\"\n                  alt=\"@BankkRoll\"\n                />\n                <AvatarFallback>CN</AvatarFallback>\n              </Avatar>\n              <span className=\"text-xs text-muted-foreground text-center\">\n                {variant}-{size}\n              </span>\n            </div>\n          )),\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Individual variants\nexport function AvatarCircle() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Avatar variant=\"circle\">\n        <AvatarImage src=\"https://github.com/BankkRoll.png\" alt=\"@BankkRoll\" />\n        <AvatarFallback>CN</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}\n\nexport function AvatarSquare() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Avatar variant=\"square\">\n        <AvatarImage src=\"https://github.com/BankkRoll.png\" alt=\"@BankkRoll\" />\n        <AvatarFallback>CN</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}\n\nexport function AvatarRounded() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Avatar variant=\"rounded\">\n        <AvatarImage src=\"https://github.com/BankkRoll.png\" alt=\"@BankkRoll\" />\n        <AvatarFallback>CN</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}\n\nexport function AvatarWithFallback() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Avatar>\n        <AvatarFallback>CN</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}\n\nexport const avatarVariants = {\n  demo: AvatarDemo,\n  variants: AvatarVariants,\n  circle: AvatarCircle,\n  square: AvatarSquare,\n  rounded: AvatarRounded,\n  withFallback: AvatarWithFallback,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of avatar",
        "component": "AvatarDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of avatar",
        "component": "AvatarVariants"
      },
      "circle": {
        "name": "circle",
        "description": "circle variant of avatar",
        "component": "AvatarCircle"
      },
      "square": {
        "name": "square",
        "description": "square variant of avatar",
        "component": "AvatarSquare"
      },
      "rounded": {
        "name": "rounded",
        "description": "rounded variant of avatar",
        "component": "AvatarRounded"
      },
      "withFallback": {
        "name": "withFallback",
        "description": "withFallback variant of avatar",
        "component": "AvatarWithFallback"
      }
    }
  },
  "badge-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "badge-demo",
    "type": "registry:ui",
    "title": "Badge Demo",
    "description": "Examples showcasing badge component variants and sizes.",
    "author": "shaduxe-ui",
    "registryDependencies": [
      "badge"
    ],
    "files": [
      {
        "path": "default/example/badge-demo",
        "content": "import { Badge } from \"../ui/badge\";\n\n// Basic demo\nexport function BadgeDemo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge>Badge</Badge>\n    </div>\n  );\n}\n\n// All variants and sizes in a responsive grid\nexport function BadgeVariants() {\n  // All variants and sizes\n  const variants = [\n    \"default\",\n    \"secondary\",\n    \"destructive\",\n    \"outline\",\n    \"ghost\",\n    \"link\",\n    \"success\",\n    \"warning\",\n    \"info\",\n  ] as const;\n\n  const sizes = [\"icon\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"] as const;\n\n  return (\n    <div className=\"grid gap-8 p-2\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Variants (with default size & shape)\n        </h4>\n        {variants.map((variant) => (\n          <div key={variant} className=\"flex flex-col items-center gap-2\">\n            <Badge variant={variant}>{variant}</Badge>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Sizes (with default variant)\n        </h4>\n        {sizes.map((size) => (\n          <div key={size} className=\"flex flex-col items-center gap-2\">\n            <Badge size={size}>{size}</Badge>\n            <span className=\"text-xs text-muted-foreground\">{size}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Shapes (with default variant & size)\n        </h4>\n      </div>\n    </div>\n  );\n}\n\n// Individual variants\nexport function BadgeDefault() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"default\">Default</Badge>\n    </div>\n  );\n}\n\nexport function BadgeSecondary() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"secondary\">Secondary</Badge>\n    </div>\n  );\n}\n\nexport function BadgeDestructive() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"destructive\">Destructive</Badge>\n    </div>\n  );\n}\n\nexport function BadgeOutline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"outline\">Outline</Badge>\n    </div>\n  );\n}\n\nexport function BadgeGhost() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"ghost\">Ghost</Badge>\n    </div>\n  );\n}\n\nexport function BadgeLink() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"link\">Link</Badge>\n    </div>\n  );\n}\n\nexport function BadgeSuccess() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"success\">Success</Badge>\n    </div>\n  );\n}\n\nexport function BadgeWarning() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"warning\">Warning</Badge>\n    </div>\n  );\n}\n\nexport function BadgeInfo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Badge variant=\"info\">Info</Badge>\n    </div>\n  );\n}\n\nexport const badgeVariants = {\n  demo: BadgeDemo,\n  variants: BadgeVariants,\n  default: BadgeDefault,\n  secondary: BadgeSecondary,\n  destructive: BadgeDestructive,\n  outline: BadgeOutline,\n  ghost: BadgeGhost,\n  link: BadgeLink,\n  success: BadgeSuccess,\n  warning: BadgeWarning,\n  info: BadgeInfo,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of badge",
        "component": "BadgeDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of badge",
        "component": "BadgeVariants"
      },
      "default": {
        "name": "default",
        "description": "default variant of badge",
        "component": "BadgeDefault"
      },
      "secondary": {
        "name": "secondary",
        "description": "secondary variant of badge",
        "component": "BadgeSecondary"
      },
      "destructive": {
        "name": "destructive",
        "description": "destructive variant of badge",
        "component": "BadgeDestructive"
      },
      "outline": {
        "name": "outline",
        "description": "outline variant of badge",
        "component": "BadgeOutline"
      },
      "ghost": {
        "name": "ghost",
        "description": "ghost variant of badge",
        "component": "BadgeGhost"
      },
      "link": {
        "name": "link",
        "description": "link variant of badge",
        "component": "BadgeLink"
      },
      "success": {
        "name": "success",
        "description": "success variant of badge",
        "component": "BadgeSuccess"
      },
      "warning": {
        "name": "warning",
        "description": "warning variant of badge",
        "component": "BadgeWarning"
      },
      "info": {
        "name": "info",
        "description": "info variant of badge",
        "component": "BadgeInfo"
      }
    }
  },
  "button-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "button-demo",
    "type": "registry:ui",
    "title": "Button Demo",
    "description": "Examples showcasing button component variants, sizes, and icon placements.",
    "author": "shaduxe-ui",
    "dependencies": [
      "lucide-react"
    ],
    "registryDependencies": [
      "button"
    ],
    "files": [
      {
        "path": "default/example/button-demo",
        "content": "import { ArrowLeft, ArrowRight } from \"lucide-react\";\nimport { Button } from \"../ui/button\";\n\n// Basic demo\nexport function ButtonDemo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button>Click me</Button>\n    </div>\n  );\n}\n\n// All variants and sizes in a responsive grid\nexport function ButtonVariants() {\n  return (\n    <div className=\"grid gap-8 p-2\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Variants (with default size)\n        </h4>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"default\">default</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"destructive\">destructive</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"outline\">outline</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"secondary\">secondary</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"ghost\">ghost</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"link\">link</Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Effects (with appropriate variants)\n        </h4>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button effect=\"ringHover\">ringHover</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button effect=\"ringHoverOutline\">ringHoverOutline</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button effect=\"shine\">shine</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button effect=\"gooeyRight\">gooeyRight</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button effect=\"gooeyLeft\">gooeyLeft</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"link\" effect=\"underline\">\n            underline\n          </Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"link\" effect=\"hoverUnderline\">\n            hoverUnderline\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Sizes (with default variant)\n        </h4>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"icon\">\n            <ArrowRight className=\"h-4 w-4\" />\n          </Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"xs\">xs</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"sm\">sm</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"md\">md</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"default\">default</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"lg\">lg</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"xl\">xl</Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button size=\"2xl\">2xl</Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Expandable Icons\n        </h4>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button effect=\"expandIcon\" Icon={ArrowLeft} iconPlacement=\"left\">\n            Expand Left\n          </Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button effect=\"expandIcon\" Icon={ArrowRight} iconPlacement=\"right\">\n            Expand Right\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Variant + Effect Combinations\n        </h4>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"destructive\" effect=\"gooeyRight\" size=\"lg\">\n            Destructive Gooey\n          </Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"outline\" effect=\"shine\" size=\"sm\">\n            Outline Shine\n          </Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"secondary\" effect=\"ringHover\" size=\"xl\">\n            Secondary Ring\n          </Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"destructive\" effect=\"gooeyLeft\">\n            Destructive Gooey Left\n          </Button>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Button variant=\"link\" effect=\"underline\">\n            Link Underline\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Individual variants\nexport function ButtonDefault() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"default\">Default</Button>\n    </div>\n  );\n}\n\nexport function ButtonDestructive() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"destructive\">Destructive</Button>\n    </div>\n  );\n}\n\nexport function ButtonOutline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"outline\">Outline</Button>\n    </div>\n  );\n}\n\nexport function ButtonSecondary() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"secondary\">Secondary</Button>\n    </div>\n  );\n}\n\nexport function ButtonGhost() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"ghost\">Ghost</Button>\n    </div>\n  );\n}\n\nexport function ButtonLink() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"link\">Link</Button>\n    </div>\n  );\n}\n\n// Individual effect examples\nexport function ButtonRingHover() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button effect=\"ringHover\">Ring Hover</Button>\n    </div>\n  );\n}\n\nexport function ButtonRingHoverOutline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button effect=\"ringHoverOutline\">Ring Hover Outline</Button>\n    </div>\n  );\n}\n\nexport function ButtonShine() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button effect=\"shine\">Shine</Button>\n    </div>\n  );\n}\n\nexport function ButtonGooeyRight() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button effect=\"gooeyRight\">Gooey Right</Button>\n    </div>\n  );\n}\n\nexport function ButtonGooeyLeft() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button effect=\"gooeyLeft\">Gooey Left</Button>\n    </div>\n  );\n}\n\nexport function ButtonUnderline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"link\" effect=\"underline\">\n        Underline\n      </Button>\n    </div>\n  );\n}\n\nexport function ButtonHoverUnderline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button variant=\"link\" effect=\"hoverUnderline\">\n        Hover Underline\n      </Button>\n    </div>\n  );\n}\n\nexport function ButtonIconLeft() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button Icon={ArrowLeft} iconPlacement=\"left\">\n        Left Icon\n      </Button>\n    </div>\n  );\n}\n\nexport function ButtonIconRight() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button Icon={ArrowRight} iconPlacement=\"right\">\n        Right Icon\n      </Button>\n    </div>\n  );\n}\n\nexport function ButtonExpandIconLeft() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button effect=\"expandIcon\" Icon={ArrowLeft} iconPlacement=\"left\">\n        Expand Left\n      </Button>\n    </div>\n  );\n}\n\nexport function ButtonExpandIconRight() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Button effect=\"expandIcon\" Icon={ArrowRight} iconPlacement=\"right\">\n        Expand Right\n      </Button>\n    </div>\n  );\n}\n\nexport const buttonVariants = {\n  demo: ButtonDemo,\n  variants: ButtonVariants,\n  default: ButtonDefault,\n  destructive: ButtonDestructive,\n  outline: ButtonOutline,\n  secondary: ButtonSecondary,\n  ghost: ButtonGhost,\n  link: ButtonLink,\n  ringHover: ButtonRingHover,\n  ringHoverOutline: ButtonRingHoverOutline,\n  shine: ButtonShine,\n  gooeyRight: ButtonGooeyRight,\n  gooeyLeft: ButtonGooeyLeft,\n  underline: ButtonUnderline,\n  hoverUnderline: ButtonHoverUnderline,\n  iconLeft: ButtonIconLeft,\n  iconRight: ButtonIconRight,\n  expandIconLeft: ButtonExpandIconLeft,\n  expandIconRight: ButtonExpandIconRight,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of button",
        "component": "ButtonDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of button",
        "component": "ButtonVariants"
      },
      "default": {
        "name": "default",
        "description": "default variant of button",
        "component": "ButtonDefault"
      },
      "destructive": {
        "name": "destructive",
        "description": "destructive variant of button",
        "component": "ButtonDestructive"
      },
      "outline": {
        "name": "outline",
        "description": "outline variant of button",
        "component": "ButtonOutline"
      },
      "secondary": {
        "name": "secondary",
        "description": "secondary variant of button",
        "component": "ButtonSecondary"
      },
      "ghost": {
        "name": "ghost",
        "description": "ghost variant of button",
        "component": "ButtonGhost"
      },
      "link": {
        "name": "link",
        "description": "link variant of button",
        "component": "ButtonLink"
      },
      "ringHover": {
        "name": "ringHover",
        "description": "ringHover variant of button",
        "component": "ButtonRingHover"
      },
      "ringHoverOutline": {
        "name": "ringHoverOutline",
        "description": "ringHoverOutline variant of button",
        "component": "ButtonRingHoverOutline"
      },
      "shine": {
        "name": "shine",
        "description": "shine variant of button",
        "component": "ButtonShine"
      },
      "gooeyRight": {
        "name": "gooeyRight",
        "description": "gooeyRight variant of button",
        "component": "ButtonGooeyRight"
      },
      "gooeyLeft": {
        "name": "gooeyLeft",
        "description": "gooeyLeft variant of button",
        "component": "ButtonGooeyLeft"
      },
      "underline": {
        "name": "underline",
        "description": "underline variant of button",
        "component": "ButtonUnderline"
      },
      "hoverUnderline": {
        "name": "hoverUnderline",
        "description": "hoverUnderline variant of button",
        "component": "ButtonHoverUnderline"
      },
      "iconLeft": {
        "name": "iconLeft",
        "description": "iconLeft variant of button",
        "component": "ButtonIconLeft"
      },
      "iconRight": {
        "name": "iconRight",
        "description": "iconRight variant of button",
        "component": "ButtonIconRight"
      },
      "expandIconLeft": {
        "name": "expandIconLeft",
        "description": "expandIconLeft variant of button",
        "component": "ButtonExpandIconLeft"
      },
      "expandIconRight": {
        "name": "expandIconRight",
        "description": "expandIconRight variant of button",
        "component": "ButtonExpandIconRight"
      }
    }
  },
  "button-installation-example": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "button-installation-example",
    "type": "registry:ui",
    "title": "Button Installation Example",
    "description": "Example showing how to install and use the button component.",
    "author": "shaduxe-ui",
    "dependencies": [
      "motion"
    ],
    "registryDependencies": [
      "button"
    ],
    "files": [
      {
        "path": "default/example/button-installation-example",
        "content": "import { Button } from \"@/components/ui/button\";\nimport { motion } from \"motion/react\";\n\nexport default function Page() {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"flex items-center p-2\"\n    >\n      <Button>Click me</Button>\n    </motion.div>\n  );\n}",
        "type": "registry:ui"
      }
    ]
  },
  "card-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "card-demo",
    "type": "registry:ui",
    "title": "Card Demo",
    "description": "Examples showcasing card component variants and sizes.",
    "author": "shaduxe-ui",
    "registryDependencies": [
      "card",
      "button"
    ],
    "files": [
      {
        "path": "default/example/card-demo",
        "content": "import { Button } from \"../ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"../ui/card\";\n\n// Basic demo\nexport function CardDemo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Card className=\"w-[350px]\">\n        <CardHeader>\n          <CardTitle>Card Title</CardTitle>\n          <CardDescription>Card Description</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p>Card Content</p>\n        </CardContent>\n        <CardFooter>\n          <Button>Action</Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\n// All variants and sizes in a responsive grid\nexport function CardVariants() {\n  // All variants and sizes\n  const variants = [\"default\", \"ghost\", \"outline\"] as const;\n\n  return (\n    <div className=\"grid gap-8 p-2\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Variants (with default size)\n        </h4>\n        {variants.map((variant) => (\n          <Card key={variant} variant={variant} className=\"w-full\">\n            <CardHeader>\n              <CardTitle className=\"text-base\">{variant}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                {variant} card style\n              </p>\n            </CardContent>\n            <CardFooter>\n              <Button>Action</Button>\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Individual variants\nexport function CardDefault() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Card variant=\"default\" className=\"w-[350px]\">\n        <CardHeader>\n          <CardTitle>Default Card</CardTitle>\n          <CardDescription>Default card with shadow</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p>Card Content</p>\n        </CardContent>\n        <CardFooter>\n          <Button>Action</Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\nexport function CardGhost() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Card variant=\"ghost\" className=\"w-[350px]\">\n        <CardHeader>\n          <CardTitle>Ghost Card</CardTitle>\n          <CardDescription>Ghost card with no shadow</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p>Card Content</p>\n        </CardContent>\n        <CardFooter>\n          <Button>Action</Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\nexport function CardOutline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Card variant=\"outline\" className=\"w-[350px]\">\n        <CardHeader>\n          <CardTitle>Outline Card</CardTitle>\n          <CardDescription>Outline card with border</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p>Card Content</p>\n        </CardContent>\n        <CardFooter>\n          <Button>Action</Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\nexport const cardVariants = {\n  demo: CardDemo,\n  variants: CardVariants,\n  default: CardDefault,\n  ghost: CardGhost,\n  outline: CardOutline,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of card",
        "component": "CardDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of card",
        "component": "CardVariants"
      },
      "default": {
        "name": "default",
        "description": "default variant of card",
        "component": "CardDefault"
      },
      "ghost": {
        "name": "ghost",
        "description": "ghost variant of card",
        "component": "CardGhost"
      },
      "outline": {
        "name": "outline",
        "description": "outline variant of card",
        "component": "CardOutline"
      }
    }
  },
  "input-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "input-demo",
    "type": "registry:ui",
    "title": "Input Demo",
    "description": "Examples showcasing input component variants, sizes, and icon integrations.",
    "author": "shaduxe-ui",
    "dependencies": [
      "lucide-react"
    ],
    "registryDependencies": [
      "input"
    ],
    "files": [
      {
        "path": "default/example/input-demo",
        "content": "import { Mail, Search } from \"lucide-react\";\nimport { Input } from \"../ui/input\";\n\n// Basic demo\nexport function InputDemo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Input placeholder=\"Input\" />\n    </div>\n  );\n}\n\n// All variants and sizes in a responsive grid\nexport function InputVariants() {\n  // All variants and sizes\n  const variants = [\"default\", \"underline\", \"pill\"] as const;\n\n  const sizes = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"] as const;\n\n  return (\n    <div className=\"grid gap-8 p-2\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Variants (with default size)\n        </h4>\n        {variants.map((variant) => (\n          <div key={variant} className=\"flex flex-col gap-2\">\n            <Input variant={variant} placeholder={`${variant} input`} />\n            <span className=\"text-xs text-muted-foreground\">{variant}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Sizes (with default variant)\n        </h4>\n        {sizes.map((size) => (\n          <div key={size} className=\"flex flex-col gap-2\">\n            <Input inputSize={size} placeholder={`${size} size`} />\n            <span className=\"text-xs text-muted-foreground\">{size}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Icon Placement\n        </h4>\n        <div className=\"flex flex-col gap-2\">\n          <Input Icon={Search} iconPlacement=\"left\" placeholder=\"Search...\" />\n          <span className=\"text-xs text-muted-foreground\">Left icon</span>\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <Input Icon={Mail} iconPlacement=\"right\" placeholder=\"Email\" />\n          <span className=\"text-xs text-muted-foreground\">Right icon</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Individual variants\nexport function InputDefault() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Input variant=\"default\" placeholder=\"Default input\" />\n    </div>\n  );\n}\n\nexport function InputUnderline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Input variant=\"underline\" placeholder=\"Underline input\" />\n    </div>\n  );\n}\n\nexport function InputPill() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Input variant=\"pill\" placeholder=\"Pill input\" />\n    </div>\n  );\n}\n\nexport function InputIconLeft() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Input Icon={Search} iconPlacement=\"left\" placeholder=\"Search...\" />\n    </div>\n  );\n}\n\nexport function InputIconRight() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Input Icon={Mail} iconPlacement=\"right\" placeholder=\"Email\" />\n    </div>\n  );\n}\n\nexport const inputVariants = {\n  demo: InputDemo,\n  variants: InputVariants,\n  default: InputDefault,\n  underline: InputUnderline,\n  pill: InputPill,\n  iconLeft: InputIconLeft,\n  iconRight: InputIconRight,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of input",
        "component": "InputDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of input",
        "component": "InputVariants"
      },
      "default": {
        "name": "default",
        "description": "default variant of input",
        "component": "InputDefault"
      },
      "underline": {
        "name": "underline",
        "description": "underline variant of input",
        "component": "InputUnderline"
      },
      "pill": {
        "name": "pill",
        "description": "pill variant of input",
        "component": "InputPill"
      },
      "iconLeft": {
        "name": "iconLeft",
        "description": "iconLeft variant of input",
        "component": "InputIconLeft"
      },
      "iconRight": {
        "name": "iconRight",
        "description": "iconRight variant of input",
        "component": "InputIconRight"
      }
    }
  },
  "switch-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "switch-demo",
    "type": "registry:ui",
    "title": "Switch Demo",
    "description": "Examples showcasing switch component variants, sizes, and thumb variations.",
    "author": "shaduxe-ui",
    "registryDependencies": [
      "switch"
    ],
    "files": [
      {
        "path": "default/example/switch-demo",
        "content": "import { Switch } from \"../ui/switch\";\n\n// Basic demo\nexport function SwitchDemo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch />\n    </div>\n  );\n}\n\n// All variants and sizes in a responsive grid\nexport function SwitchVariants() {\n  // All variants and sizes\n  const variants = [\"default\", \"rounded\", \"square\", \"ios\"] as const;\n\n  const sizes = [\"icon\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"] as const;\n  const thumbVariants = [\"default\", \"rounded\", \"square\", \"ios\"] as const;\n\n  return (\n    <div className=\"grid gap-8 p-2\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Variants (with default size)\n        </h4>\n        {variants.map((variant) => (\n          <div key={variant} className=\"flex flex-col items-center gap-2\">\n            <Switch variant={variant} />\n            <span className=\"text-xs text-muted-foreground\">{variant}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Sizes (with default variant)\n        </h4>\n        {sizes.map((size) => (\n          <div key={size} className=\"flex flex-col items-center gap-2\">\n            <Switch size={size} />\n            <span className=\"text-xs text-muted-foreground\">{size}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">\n          Thumb Variants (with default variant & size)\n        </h4>\n        {thumbVariants.map((thumbVariant) => (\n          <div key={thumbVariant} className=\"flex flex-col items-center gap-2\">\n            <Switch thumbVariant={thumbVariant} />\n            <span className=\"text-xs text-muted-foreground\">\n              thumb-{thumbVariant}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 gap-4\">\n        <h4 className=\"text-sm font-medium col-span-full mb-2\">Features</h4>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Switch showLabels labelOn=\"On\" labelOff=\"Off\" />\n          <span className=\"text-xs text-muted-foreground\">With labels</span>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Switch showIcons />\n          <span className=\"text-xs text-muted-foreground\">With icons</span>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Switch disabled />\n          <span className=\"text-xs text-muted-foreground\">Disabled</span>\n        </div>\n        <div className=\"flex flex-col items-center gap-2\">\n          <Switch defaultChecked />\n          <span className=\"text-xs text-muted-foreground\">Default checked</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Individual variants\nexport function SwitchDefault() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch variant=\"default\" />\n    </div>\n  );\n}\n\nexport function SwitchRounded() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch variant=\"rounded\" />\n    </div>\n  );\n}\n\nexport function SwitchSquare() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch variant=\"square\" />\n    </div>\n  );\n}\n\nexport function SwitchIOS() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch variant=\"ios\" />\n    </div>\n  );\n}\n\nexport function SwitchWithLabels() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch showLabels />\n    </div>\n  );\n}\n\nexport function SwitchWithIcons() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch showIcons />\n    </div>\n  );\n}\n\nexport function SwitchDisabled() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch disabled />\n    </div>\n  );\n}\n\nexport function SwitchDefaultChecked() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Switch defaultChecked />\n    </div>\n  );\n}\n\nexport const switchVariants = {\n  demo: SwitchDemo,\n  variants: SwitchVariants,\n  default: SwitchDefault,\n  rounded: SwitchRounded,\n  square: SwitchSquare,\n  ios: SwitchIOS,\n  withLabels: SwitchWithLabels,\n  withIcons: SwitchWithIcons,\n  disabled: SwitchDisabled,\n  defaultChecked: SwitchDefaultChecked,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of switch",
        "component": "SwitchDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of switch",
        "component": "SwitchVariants"
      },
      "default": {
        "name": "default",
        "description": "default variant of switch",
        "component": "SwitchDefault"
      },
      "rounded": {
        "name": "rounded",
        "description": "rounded variant of switch",
        "component": "SwitchRounded"
      },
      "square": {
        "name": "square",
        "description": "square variant of switch",
        "component": "SwitchSquare"
      },
      "ios": {
        "name": "ios",
        "description": "ios variant of switch",
        "component": "SwitchIOS"
      },
      "withLabels": {
        "name": "withLabels",
        "description": "withLabels variant of switch",
        "component": "SwitchWithLabels"
      },
      "withIcons": {
        "name": "withIcons",
        "description": "withIcons variant of switch",
        "component": "SwitchWithIcons"
      },
      "disabled": {
        "name": "disabled",
        "description": "disabled variant of switch",
        "component": "SwitchDisabled"
      },
      "defaultChecked": {
        "name": "defaultChecked",
        "description": "defaultChecked variant of switch",
        "component": "SwitchDefaultChecked"
      }
    }
  },
  "tabs-demo": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "tabs-demo",
    "type": "registry:ui",
    "title": "Tabs Demo",
    "description": "Examples showcasing tabs component with different visual styles and layouts.",
    "author": "shaduxe-ui",
    "registryDependencies": [
      "tabs"
    ],
    "files": [
      {
        "path": "default/example/tabs-demo",
        "content": "import { Tabs, TabsContent, TabsList, TabsTrigger } from \"../ui/tabs\";\n\n// Basic demo\nexport function TabsDemo() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Tabs defaultValue=\"account\">\n        <TabsList>\n          <TabsTrigger value=\"account\">Account</TabsTrigger>\n          <TabsTrigger value=\"password\">Password</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"account\">Account settings</TabsContent>\n        <TabsContent value=\"password\">Password settings</TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\n// All variants in a responsive grid\nexport function TabsVariants() {\n  // All variants\n  const variants = [\n    \"default\",\n    \"underline\",\n    \"pill\",\n    \"rounded\",\n    \"folder\",\n  ] as const;\n\n  return (\n    <div className=\"grid gap-8 p-2\">\n      <div className=\"grid grid-cols-1 gap-8\">\n        <h4 className=\"text-sm font-medium mb-2\">All Variants</h4>\n        {variants.map((variant) => (\n          <div key={variant} className=\"space-y-2\">\n            <Tabs\n              defaultValue=\"account\"\n              variant={variant}\n              className=\"w-full max-w-md\"\n            >\n              <TabsList>\n                <TabsTrigger value=\"account\">Account</TabsTrigger>\n                <TabsTrigger value=\"password\">Password</TabsTrigger>\n              </TabsList>\n              <TabsContent value=\"account\">\n                <div className=\"rounded-md bg-muted p-4 mt-2\">\n                  <p className=\"text-sm\">{variant} variant tabs</p>\n                </div>\n              </TabsContent>\n              <TabsContent value=\"password\">\n                <div className=\"rounded-md bg-muted p-4 mt-2\">\n                  <p className=\"text-sm\">Password content for {variant} tabs</p>\n                </div>\n              </TabsContent>\n            </Tabs>\n            <span className=\"text-xs text-muted-foreground\">{variant}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Individual variants\nexport function TabsDefault() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Tabs defaultValue=\"account\" variant=\"default\">\n        <TabsList>\n          <TabsTrigger value=\"account\">Account</TabsTrigger>\n          <TabsTrigger value=\"password\">Password</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"account\">Account settings</TabsContent>\n        <TabsContent value=\"password\">Password settings</TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport function TabsUnderline() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Tabs defaultValue=\"account\" variant=\"underline\">\n        <TabsList>\n          <TabsTrigger value=\"account\">Account</TabsTrigger>\n          <TabsTrigger value=\"password\">Password</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"account\">Account settings</TabsContent>\n        <TabsContent value=\"password\">Password settings</TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport function TabsPill() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Tabs defaultValue=\"account\" variant=\"pill\">\n        <TabsList>\n          <TabsTrigger value=\"account\">Account</TabsTrigger>\n          <TabsTrigger value=\"password\">Password</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"account\">Account settings</TabsContent>\n        <TabsContent value=\"password\">Password settings</TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport function TabsRounded() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Tabs defaultValue=\"account\" variant=\"rounded\">\n        <TabsList>\n          <TabsTrigger value=\"account\">Account</TabsTrigger>\n          <TabsTrigger value=\"password\">Password</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"account\">Account settings</TabsContent>\n        <TabsContent value=\"password\">Password settings</TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport function TabsFolder() {\n  return (\n    <div className=\"flex items-center p-2\">\n      <Tabs defaultValue=\"account\" variant=\"folder\">\n        <TabsList>\n          <TabsTrigger value=\"account\">Account</TabsTrigger>\n          <TabsTrigger value=\"password\">Password</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"account\">Account settings</TabsContent>\n        <TabsContent value=\"password\">Password settings</TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport const tabsVariants = {\n  demo: TabsDemo,\n  variants: TabsVariants,\n  default: TabsDefault,\n  underline: TabsUnderline,\n  pill: TabsPill,\n  rounded: TabsRounded,\n  folder: TabsFolder,\n};",
        "type": "registry:ui"
      }
    ],
    "variants": {
      "demo": {
        "name": "demo",
        "description": "demo variant of tabs",
        "component": "TabsDemo"
      },
      "variants": {
        "name": "variants",
        "description": "variants variant of tabs",
        "component": "TabsVariants"
      },
      "default": {
        "name": "default",
        "description": "default variant of tabs",
        "component": "TabsDefault"
      },
      "underline": {
        "name": "underline",
        "description": "underline variant of tabs",
        "component": "TabsUnderline"
      },
      "pill": {
        "name": "pill",
        "description": "pill variant of tabs",
        "component": "TabsPill"
      },
      "rounded": {
        "name": "rounded",
        "description": "rounded variant of tabs",
        "component": "TabsRounded"
      },
      "folder": {
        "name": "folder",
        "description": "folder variant of tabs",
        "component": "TabsFolder"
      }
    }
  },
  "pricing-one": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "pricing-one",
    "type": "registry:block",
    "title": "Pricing Table",
    "description": "A pricing component with feature comparison table and responsive layout.",
    "author": "shaduxe-ui",
    "dependencies": [
      "motion",
      "lucide-react"
    ],
    "registryDependencies": [
      "badge",
      "button"
    ],
    "files": [
      {
        "path": "default/blocks/pricing-one",
        "content": "import { Check, Minus, MoveRight } from \"lucide-react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion } from \"motion/react\";\n\ninterface Feature {\n  name: string;\n  tiers: (boolean | string)[];\n}\n\ninterface Plan {\n  name: string;\n  price: string;\n  description: string;\n  features: Feature[];\n  isPrimary: boolean;\n  ctaLabel: string;\n  ctaLink: string;\n}\n\nexport default function PricingOne() {\n  const plans: Plan[] = [\n    {\n      name: \"Starter\",\n      price: \"Free\",\n      description: \"Get started with essential features for small projects.\",\n      features: [\n        { name: \"Supabase Integration\", tiers: [true, true, true] },\n        { name: \"Stripe Checkout\", tiers: [true, true, true] },\n        { name: \"Custom Email Templates\", tiers: [false, true, true] },\n        { name: \"24/7 Support\", tiers: [false, false, true] },\n      ],\n      isPrimary: false,\n      ctaLabel: \"Learn More\",\n      ctaLink: \"#\",\n    },\n    {\n      name: \"Pro\",\n      price: \"$19\",\n      description: \"Advanced tools for growing businesses and teams.\",\n      features: [\n        { name: \"Supabase Integration\", tiers: [true, true, true] },\n        { name: \"Stripe Checkout\", tiers: [true, true, true] },\n        { name: \"Custom Email Templates\", tiers: [true, true, true] },\n        { name: \"24/7 Support\", tiers: [false, true, true] },\n      ],\n      isPrimary: true,\n      ctaLabel: \"Get Started\",\n      ctaLink: \"#\",\n    },\n    {\n      name: \"Enterprise\",\n      price: \"Contact Us\",\n      description: \"Custom solutions for enterprise-grade applications.\",\n      features: [\n        { name: \"Supabase Integration\", tiers: [true, true, true] },\n        { name: \"Stripe Checkout\", tiers: [true, true, true] },\n        { name: \"Custom Email Templates\", tiers: [true, true, true] },\n        { name: \"24/7 Support\", tiers: [true, true, true] },\n      ],\n      isPrimary: false,\n      ctaLabel: \"Contact Sales\",\n      ctaLink: \"#\",\n    },\n  ];\n\n  return (\n    <div className=\"w-full py-10 md:py-20\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex flex-col items-center justify-center gap-4 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Badge>Launch Your Product</Badge>\n          </motion.div>\n          <motion.h2\n            className=\"font-regular max-w-xl text-center text-3xl tracking-tighter md:text-5xl lg:text-7xl\"\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n          >\n            No credit card required\n          </motion.h2>\n          <motion.p\n            className=\"max-w-xl text-center text-base leading-relaxed tracking-tight text-gray-400 md:text-lg\"\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.4 }}\n          >\n            Launch smarter, faster, and better with pre-integrated tools like\n            Supabase, Stripe, Resend, and Framer Motion. Emerald empowers your\n            SaaS journey with a modern, scalable architecture.\n          </motion.p>\n        </div>\n        <motion.div\n          className=\"mt-10 md:mt-20\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.6 }}\n        >\n          <div className=\"md:hidden\">\n            {plans.map((plan, index) => (\n              <div key={index} className=\"mb-8 rounded-lg border p-6\">\n                <h3 className=\"text-2xl font-bold\">{plan.name}</h3>\n                <p className=\"mt-2 text-sm text-gray-400\">{plan.description}</p>\n                <div className=\"mt-4 flex items-baseline\">\n                  <span className=\"text-4xl font-bold\">{plan.price}</span>\n                  <span className=\"ml-2 text-sm text-gray-400\">\n                    {plan.price === \"Contact Us\" ? \"\" : \"/ month\"}\n                  </span>\n                </div>\n                <a href={plan.ctaLink}>\n                  <Button\n                    variant={plan.isPrimary ? \"default\" : \"outline\"}\n                    className=\"mt-6 w-full justify-center gap-2 bg-white text-black hover:bg-gray-200\"\n                  >\n                    {plan.ctaLabel} <MoveRight className=\"h-4 w-4\" />\n                  </Button>\n                </a>\n                <div className=\"mt-6\">\n                  <h4 className=\"mb-2 font-semibold\">Features:</h4>\n                  <ul className=\"space-y-2\">\n                    {plan.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center\">\n                        {typeof feature.tiers[index] === \"boolean\" ? (\n                          feature.tiers[index] ? (\n                            <Check className=\"mr-2 h-5 w-5 text-green-500\" />\n                          ) : (\n                            <Minus className=\"mr-2 h-5 w-5 text-gray-500\" />\n                          )\n                        ) : (\n                          <Check className=\"mr-2 h-5 w-5 text-green-500\" />\n                        )}\n                        <span className=\"text-sm\">\n                          {feature.name}\n                          {typeof feature.tiers[index] !== \"boolean\" && (\n                            <span className=\"ml-1 text-gray-400\">\n                              ({feature.tiers[index]})\n                            </span>\n                          )}\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"hidden md:block\">\n            <div className=\"grid grid-cols-4 gap-0 divide-x divide-gray-800\">\n              <div />\n              {plans.map((plan, index) => (\n                <div\n                  key={index}\n                  className=\"flex flex-col justify-between gap-4 p-6\"\n                >\n                  <div>\n                    <p className=\"text-2xl font-bold\">{plan.name}</p>\n                    <p className=\"mt-2 h-12 text-sm text-gray-400\">\n                      {plan.description}\n                    </p>\n                    <div className=\"mt-6 flex items-baseline\">\n                      <span className=\"text-4xl font-bold\">{plan.price}</span>\n                      <span className=\"ml-2 text-sm text-gray-400\">\n                        {plan.price === \"Contact Us\" ? \"\" : \"/ month\"}\n                      </span>\n                    </div>\n                  </div>\n                  <a href={plan.ctaLink}>\n                    <Button\n                      variant={plan.isPrimary ? \"default\" : \"outline\"}\n                      className=\"mt-4 w-full justify-center gap-2\"\n                    >\n                      {plan.ctaLabel} <MoveRight className=\"h-4 w-4\" />\n                    </Button>\n                  </a>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-8\">\n              {plans[0].features.map((feature, featureIndex) => (\n                <div\n                  key={`feature-row-${featureIndex}`}\n                  className=\"grid grid-cols-4 gap-0 divide-x divide-gray-800 border-b border-gray-800 last:border-b-0\"\n                >\n                  <div className=\"flex items-center p-4 font-medium\">\n                    {feature.name}\n                  </div>\n\n                  {plans.map((plan, planIndex) => (\n                    <div\n                      key={`plan-feature-${planIndex}-${featureIndex}`}\n                      className=\"flex justify-center p-4\"\n                    >\n                      {typeof feature.tiers[planIndex] === \"boolean\" ? (\n                        feature.tiers[planIndex] ? (\n                          <Check className=\"h-5 w-5 text-green-500\" />\n                        ) : (\n                          <Minus className=\"h-5 w-5 text-gray-500\" />\n                        )\n                      ) : (\n                        <p className=\"text-sm text-gray-400\">\n                          {feature.tiers[planIndex]}\n                        </p>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
        "type": "registry:block"
      }
    ]
  },
  "pricing-two": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "pricing-two",
    "type": "registry:block",
    "title": "Featured Pricing Card",
    "description": "An animated single card pricing component with feature lists and call-to-action.",
    "author": "shaduxe-ui",
    "dependencies": [
      "motion",
      "lucide-react"
    ],
    "registryDependencies": [
      "card",
      "button",
      "separator"
    ],
    "files": [
      {
        "path": "default/blocks/pricing-two",
        "content": "\"use client\";\n\nimport {\n  Card,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { motion, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Check } from \"lucide-react\";\nimport { Separator } from \"@/components/ui/separator\";\n\nexport default function PricingTwo() {\n  const containerRef = useRef(null);\n  const isInView = useInView(containerRef, { once: true, amount: 0.2 });\n  const [hasAnimated, setHasAnimated] = useState(false);\n\n  useEffect(() => {\n    if (isInView && !hasAnimated) {\n      setHasAnimated(true);\n    }\n  }, [isInView, hasAnimated]);\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.3,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 260,\n        damping: 20,\n      },\n    },\n  };\n\n  const listItemVariants = {\n    hidden: { opacity: 0, x: -20 },\n    visible: {\n      opacity: 1,\n      x: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 100,\n        damping: 10,\n      },\n    },\n  };\n\n  return (\n    <motion.section\n      ref={containerRef}\n      id=\"pricing\"\n      className=\"container py-12 md:py-24\"\n      initial=\"hidden\"\n      animate={hasAnimated ? \"visible\" : \"hidden\"}\n      variants={containerVariants}\n    >\n      <Card className=\"relative mx-auto w-full max-w-6xl overflow-hidden\">\n        <div className=\"flex flex-col lg:flex-row\">\n          <motion.div\n            className=\"flex flex-col justify-between p-6 lg:w-2/5 lg:p-10\"\n            variants={itemVariants}\n          >\n            <div>\n              <CardHeader className=\"p-0\">\n                <div className=\"flex items-start justify-between\">\n                  <div>\n                    <CardTitle className=\"text-3xl font-bold\">\n                      Ultimate Plan\n                    </CardTitle>\n                    <CardDescription className=\"mt-2\">\n                      Access everything you need to grow your business.\n                    </CardDescription>\n                  </div>\n                </div>\n              </CardHeader>\n              <motion.div className=\"mt-6 space-y-4\" variants={itemVariants}>\n                <div className=\"flex items-baseline\">\n                  <span className=\"text-5xl font-extrabold\">$99</span>\n                  <span className=\"ml-2 text-xl text-muted-foreground line-through\">\n                    $199\n                  </span>\n                </div>\n                <span className=\"block text-sm text-muted-foreground\">\n                  one-time payment\n                </span>\n              </motion.div>\n            </div>\n            <motion.div className=\"mt-8\" variants={itemVariants}>\n              <Button className=\"w-full\" size=\"lg\">\n                Get Started\n              </Button>\n            </motion.div>\n          </motion.div>\n          <Separator className=\"lg:my-6 lg:hidden\" />\n          <motion.div\n            className=\"bg-muted/50 p-6 lg:w-3/5 lg:p-10\"\n            variants={itemVariants}\n          >\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"mb-4 text-lg font-semibold\">Features:</h3>\n                <ul className=\"grid grid-cols-1 gap-3 md:grid-cols-2\">\n                  {[\n                    \"Unlimited Projects\",\n                    \"Advanced Analytics\",\n                    \"Team Collaboration\",\n                    \"Custom Branding\",\n                  ].map((feature, index) => (\n                    <motion.li\n                      key={index}\n                      className=\"flex items-center\"\n                      variants={listItemVariants}\n                      custom={index}\n                    >\n                      <Check className=\"mr-2 h-4 w-4 text-primary\" />\n                      <span className=\"text-sm\">{feature}</span>\n                    </motion.li>\n                  ))}\n                </ul>\n              </div>\n              <Separator />\n              <div>\n                <h3 className=\"mb-4 text-lg font-semibold\">Perks:</h3>\n                <ul className=\"grid grid-cols-1 gap-3 md:grid-cols-2\">\n                  {[\n                    \"24/7 Support\",\n                    \"Priority Assistance\",\n                    \"Exclusive Webinars\",\n                    \"Early Feature Access\",\n                  ].map((perk, index) => (\n                    <motion.li\n                      key={index}\n                      className=\"flex items-center\"\n                      variants={listItemVariants}\n                      custom={index + 4}\n                    >\n                      <Check className=\"mr-2 h-4 w-4 text-primary\" />\n                      <span className=\"text-sm\">{perk}</span>\n                    </motion.li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </Card>\n    </motion.section>\n  );\n}",
        "type": "registry:block"
      }
    ]
  },
  "pricing-three": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "pricing-three",
    "type": "registry:block",
    "title": "Pricing Cards",
    "description": "A three-column pricing card layout with feature lists and highlight for primary plan.",
    "author": "shaduxe-ui",
    "dependencies": [
      "motion",
      "lucide-react"
    ],
    "registryDependencies": [
      "card",
      "badge",
      "button"
    ],
    "files": [
      {
        "path": "default/blocks/pricing-three",
        "content": "import {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Check, X } from \"lucide-react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion } from \"motion/react\";\n\ninterface Feature {\n  name: string;\n  included: boolean;\n}\n\ninterface Plan {\n  name: string;\n  price: string;\n  description: string;\n  features: Feature[];\n  ctaLabel: string;\n  isPrimary: boolean;\n}\n\nexport default function PricingSection() {\n  const plans: Plan[] = [\n    {\n      name: \"Basic\",\n      price: \"$9\",\n      description: \"All the basics for starting a new business\",\n      features: [\n        { name: \"5 products\", included: true },\n        { name: \"Basic analytics\", included: true },\n        { name: \"48-hour support response time\", included: true },\n        { name: \"Advanced analytics\", included: false },\n        { name: \"Custom reporting\", included: false },\n      ],\n      ctaLabel: \"Get Started\",\n      isPrimary: false,\n    },\n    {\n      name: \"Pro\",\n      price: \"$29\",\n      description: \"Everything you need for a growing business\",\n      features: [\n        { name: \"25 products\", included: true },\n        { name: \"Advanced analytics\", included: true },\n        { name: \"24-hour support response time\", included: true },\n        { name: \"Custom reporting\", included: true },\n        { name: \"API access\", included: false },\n      ],\n      ctaLabel: \"Get Started\",\n      isPrimary: true,\n    },\n    {\n      name: \"Enterprise\",\n      price: \"Custom\",\n      description: \"Advanced features for scaling your business\",\n      features: [\n        { name: \"Unlimited products\", included: true },\n        { name: \"Advanced analytics\", included: true },\n        { name: \"1-hour support response time\", included: true },\n        { name: \"Custom reporting\", included: true },\n        { name: \"API access\", included: true },\n      ],\n      ctaLabel: \"Contact Sales\",\n      isPrimary: false,\n    },\n  ];\n\n  return (\n    <section className=\"py-24 sm:py-32\">\n      <div className=\"container px-4 md:px-6\">\n        <div className=\"mx-auto max-w-2xl text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Badge variant=\"secondary\" className=\"mb-4\">\n              Pricing\n            </Badge>\n          </motion.div>\n          <motion.h2\n            className=\"text-3xl font-bold tracking-tight text-foreground sm:text-4xl\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.1 }}\n          >\n            Simple, Transparent Pricing\n          </motion.h2>\n          <motion.p\n            className=\"mt-4 text-lg text-muted-foreground\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n          >\n            Choose the plan that's right for you and start optimizing your\n            workflow today.\n          </motion.p>\n        </div>\n\n        <motion.div\n          className=\"mx-auto mt-16 flex max-w-6xl flex-col items-center justify-center gap-6 sm:mt-20 md:flex-row md:items-stretch md:gap-0\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.3 }}\n        >\n          {plans.map((plan, planIdx) => (\n            <motion.div\n              key={plan.name}\n              className={`w-full max-w-sm md:w-1/3 ${\n                planIdx === 1\n                  ? \"z-10 md:-mx-0\"\n                  : planIdx === 0\n                    ? \"md:mr-[-1px]\"\n                    : \"md:ml-[-1px]\"\n              }`}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 * (planIdx + 4) }}\n            >\n              <Card\n                className={`flex h-full flex-col justify-between rounded-3xl border-2 ${\n                  planIdx === 1\n                    ? \"border-primary shadow-2xl md:scale-110\"\n                    : \"border-border\"\n                }`}\n              >\n                <CardHeader className=\"p-6\">\n                  <CardTitle\n                    className={`text-xl ${planIdx === 1 ? \"text-primary\" : \"\"}`}\n                  >\n                    {plan.name}\n                  </CardTitle>\n                  <div className=\"mt-4 flex items-baseline text-5xl font-extrabold\">\n                    {plan.price}\n                    {plan.price !== \"Custom\" && (\n                      <span className=\"ml-1 text-xl font-normal text-muted-foreground\">\n                        /month\n                      </span>\n                    )}\n                  </div>\n                  <p className=\"mt-4 text-sm text-muted-foreground\">\n                    {plan.description}\n                  </p>\n                </CardHeader>\n                <CardContent className=\"flex-grow p-6\">\n                  <ul className=\"space-y-3\">\n                    {plan.features.map((feature) => (\n                      <li key={feature.name} className=\"flex items-center\">\n                        {feature.included ? (\n                          <Check className=\"h-5 w-5 flex-shrink-0 text-primary\" />\n                        ) : (\n                          <X className=\"h-5 w-5 flex-shrink-0 text-muted-foreground\" />\n                        )}\n                        <span\n                          className={`ml-3 text-sm ${\n                            feature.included\n                              ? \"text-foreground\"\n                              : \"text-muted-foreground\"\n                          }`}\n                        >\n                          {feature.name}\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardFooter className=\"p-6\">\n                  <Button\n                    variant={planIdx === 1 ? \"default\" : \"outline\"}\n                    className=\"w-full\"\n                    size=\"lg\"\n                  >\n                    {plan.ctaLabel}\n                  </Button>\n                </CardFooter>\n              </Card>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n}",
        "type": "registry:block"
      }
    ]
  },
  "pricing-four": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "pricing-four",
    "type": "registry:block",
    "title": "Pricing with Testimonials",
    "description": "A pricing component with testimonials and responsive layout.",
    "author": "shaduxe-ui",
    "dependencies": [
      "motion",
      "lucide-react"
    ],
    "registryDependencies": [
      "card",
      "badge",
      "button",
      "separator"
    ],
    "files": [
      {
        "path": "default/blocks/pricing-four",
        "content": "import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Check,\n  ChevronRight,\n  Crown,\n  ExternalLink,\n  Heart,\n  LucideIcon,\n  Shield,\n  ShoppingCart,\n  Star,\n  Stars,\n} from \"lucide-react\";\nimport { AnimatePresence, motion, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport interface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  company?: string;\n  content: string;\n  rating: number;\n  avatar: string;\n}\n\nexport interface Feature {\n  text: string;\n}\n\nexport interface Benefit {\n  text: string;\n  icon: LucideIcon;\n}\n\nexport interface PricingFourProps {\n  className?: string;\n  cardClassName?: string;\n  maxWidth?: string;\n}\n\nconst pricingConfig = {\n  badge: {\n    icon: Crown,\n    text: \"Premium Template\",\n  },\n  title: \"Next.js Starter Template\",\n  subtitle:\n    \"Build your next SaaS application with this premium starter template\",\n  price: {\n    current: \"$69.99\",\n    original: \"$99.99\",\n    discount: \"30% Off\",\n  },\n  benefits: [\n    {\n      text: \"One-time payment, lifetime updates\",\n      icon: Check,\n    },\n    {\n      text: \"30-day money-back guarantee\",\n      icon: Shield,\n    },\n    {\n      text: \"Created by developers for developers\",\n      icon: Heart,\n    },\n  ],\n  features: [\n    \"Modern Next.js 14 App Router\",\n    \"TypeScript and Tailwind CSS\",\n    \"Supabase Auth Integration\",\n    \"Responsive Dashboard Layout\",\n    \"Dark Mode Support\",\n    \"Authentication Flows\",\n    \"50+ UI Components\",\n    \"Email Templates\",\n    \"SEO Optimized\",\n    \"Performance Optimized\",\n    \"Premium Support\",\n  ].map((text) => ({ text })),\n  featuresIcon: Check,\n  featuresTitle: \"Included Features\",\n  featuresBadge: {\n    icon: Stars,\n    text: \"All Features\",\n  },\n  primaryButton: {\n    text: \"Purchase Template\",\n    chevronIcon: ChevronRight,\n    href: \"#\",\n  },\n  secondaryButton: {\n    text: \"Live Demo\",\n    icon: ExternalLink,\n    href: \"#\",\n  },\n  testimonials: [\n    {\n      id: 1,\n      name: \"Alex Johnson\",\n      role: \"Full Stack Developer\",\n      company: \"TechFlow\",\n      content:\n        \"This starter template saved me weeks of setup time. The Supabase integration is flawless, and the UI components are beautiful and easy to customize.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\",\n    },\n    {\n      id: 2,\n      name: \"Sarah Miller\",\n      role: \"Frontend Engineer\",\n      company: \"DesignHub\",\n      content:\n        \"I've used many starter templates, but this one stands out for its clean architecture and attention to detail.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/44.jpg\",\n    },\n    {\n      id: 3,\n      name: \"Michael Chen\",\n      role: \"Product Manager\",\n      company: \"InnovateLabs\",\n      content:\n        \"Our team was able to launch our MVP in record time thanks to this template. The authentication flow and user management features worked right out of the box.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/46.jpg\",\n    },\n    {\n      id: 4,\n      name: \"Emily Rodriguez\",\n      role: \"UX Designer\",\n      company: \"CreativeCraft\",\n      content:\n        \"The dark mode implementation is perfect, and the components are accessible by default.\",\n      rating: 4,\n      avatar: \"https://randomuser.me/api/portraits/women/65.jpg\",\n    },\n    {\n      id: 5,\n      name: \"David Park\",\n      role: \"CTO\",\n      company: \"StartupForge\",\n      content:\n        \"We evaluated several starter templates for our new project, and this one was by far the most complete..\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/22.jpg\",\n    },\n    {\n      id: 6,\n      name: \"Olivia Martinez\",\n      role: \"Product Owner\",\n      company: \"InnovateX\",\n      content:\n        \"After evaluating several solutions, we chose this one for its flexibility and robust feature set. \",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/24.jpg\",\n    },\n  ],\n  testimonialRotationSpeed: 5000,\n};\n\nexport default function PricingFour({\n  className,\n  cardClassName,\n  maxWidth = \"max-w-4xl\",\n}: PricingFourProps) {\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const isInView = useInView(sectionRef, { once: true, amount: 0.2 });\n  const [currentTestimonialIndex, setCurrentTestimonialIndex] = useState(0);\n\n  // Auto-rotate testimonials\n  useEffect(() => {\n    if (pricingConfig.testimonials.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setCurrentTestimonialIndex(\n        (prev) => (prev + 1) % pricingConfig.testimonials.length,\n      );\n    }, pricingConfig.testimonialRotationSpeed);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Extract data from config\n  const {\n    badge,\n    title,\n    subtitle,\n    price,\n    benefits,\n    features,\n    featuresIcon,\n    featuresTitle,\n    featuresBadge,\n    primaryButton,\n    secondaryButton,\n    testimonials,\n  } = pricingConfig;\n\n  // Component references\n  const BadgeIcon = badge?.icon;\n  const FeaturesBadgeIcon = featuresBadge?.icon;\n  const FeaturesIcon = featuresIcon;\n  const ChevronIcon = primaryButton.chevronIcon;\n  const SecondaryButtonIcon = secondaryButton?.icon;\n\n  return (\n    <div\n      ref={sectionRef}\n      className={`py-12 relative overflow-hidden ${className || \"\"}`}\n    >\n      <div\n        className={`container px-4 md:px-6 relative z-10 mx-auto ${maxWidth}`}\n      >\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n          transition={{ duration: 0.6, ease: [0.22, 1, 0.36, 1] }}\n        >\n          <Card\n            className={`overflow-hidden border border-primary/10 relative group ${cardClassName || \"\"}`}\n          >\n            <motion.div\n              className=\"absolute inset-0 pointer-events-none\"\n              initial={{ opacity: 0 }}\n              animate={isInView ? { opacity: 1 } : { opacity: 0 }}\n              transition={{ delay: 0.3, duration: 0.6 }}\n            >\n              <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-700 bg-gradient-to-r from-primary/5 via-primary/2 to-transparent\" />\n            </motion.div>\n\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Left column - Pricing details */}\n              <div className=\"p-6 md:p-8 md:w-1/2 flex flex-col\">\n                {badge && (\n                  <div className=\"flex items-center mb-4\">\n                    <Badge className=\"px-3 py-1 bg-primary/5 border-primary/10 text-primary hover:bg-primary/10\">\n                      {BadgeIcon && <BadgeIcon className=\"h-3.5 w-3.5 mr-1\" />}\n                      <span>{badge.text}</span>\n                    </Badge>\n                  </div>\n                )}\n\n                <h3 className=\"text-2xl font-bold mb-2\">{title}</h3>\n                <p className=\"text-muted-foreground mb-4\">{subtitle}</p>\n\n                <div className=\"flex items-baseline mb-6\">\n                  <span className=\"text-4xl font-bold\">{price.current}</span>\n                  {price.original && (\n                    <span className=\"text-muted-foreground ml-2 line-through\">\n                      {price.original}\n                    </span>\n                  )}\n                  {price.discount && (\n                    <Badge\n                      variant=\"outline\"\n                      className={`ml-3 border-green-400/30 text-green-500`}\n                    >\n                      <span>{price.discount}</span>\n                    </Badge>\n                  )}\n                </div>\n\n                <div className=\"space-y-4 mb-6\">\n                  {benefits.map((benefit, index) => {\n                    const BenefitIcon = benefit.icon;\n\n                    return (\n                      <div key={index} className=\"flex items-center gap-2\">\n                        <BenefitIcon className=\"h-4 w-4 text-primary\" />\n                        <span className=\"text-sm\">{benefit.text}</span>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <div className=\"mt-auto space-y-3\">\n                  <Button\n                    className=\"w-full gap-2 group\"\n                    size=\"lg\"\n                    asChild={!!primaryButton.href}\n                  >\n                    {primaryButton.href ? (\n                      <a href={primaryButton.href} target=\"_blank\">\n                        <span>{primaryButton.text}</span>\n                        {ChevronIcon && (\n                          <ChevronIcon className=\"h-4 w-4 ml-auto transition-transform group-hover:translate-x-1\" />\n                        )}\n                      </a>\n                    ) : (\n                      <>\n                        <span>{primaryButton.text}</span>\n                        {ChevronIcon && (\n                          <ChevronIcon className=\"h-4 w-4 ml-auto transition-transform group-hover:translate-x-1\" />\n                        )}\n                      </>\n                    )}\n                  </Button>\n\n                  {secondaryButton && (\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full gap-2\"\n                      size=\"lg\"\n                      asChild={!!secondaryButton.href}\n                    >\n                      {secondaryButton.href ? (\n                        <a href={secondaryButton.href} target=\"_blank\">\n                          <span>{secondaryButton.text}</span>\n                          {SecondaryButtonIcon && (\n                            <SecondaryButtonIcon className=\"h-4 w-4 ml-auto\" />\n                          )}\n                        </a>\n                      ) : (\n                        <>\n                          <span>{secondaryButton.text}</span>\n                          {SecondaryButtonIcon && (\n                            <SecondaryButtonIcon className=\"h-4 w-4 ml-auto\" />\n                          )}\n                        </>\n                      )}\n                    </Button>\n                  )}\n                </div>\n              </div>\n\n              {/* Right column - Features */}\n              <div className=\"p-6 md:p-8 md:w-1/2 md:border-l border-border/50\">\n                <div className=\"flex items-center mb-4\">\n                  <h4 className=\"font-semibold\">{featuresTitle}</h4>\n                </div>\n\n                <div className=\"space-y-3 mb-6\">\n                  {features.map((feature, i) => (\n                    <motion.div\n                      key={i}\n                      initial={{ opacity: 0, x: 20 }}\n                      animate={isInView ? { opacity: 1, x: 0 } : {}}\n                      transition={{ delay: 0.4 + i * 0.05, duration: 0.5 }}\n                      className=\"flex items-center gap-3\"\n                    >\n                      <div className=\"flex h-5 w-5 items-center justify-center rounded-full bg-primary/10\">\n                        <FeaturesIcon className=\"h-3 w-3 text-primary\" />\n                      </div>\n                      <span className=\"text-sm\">{feature.text}</span>\n                    </motion.div>\n                  ))}\n                </div>\n\n                {testimonials.length > 0 && (\n                  <>\n                    <Separator className=\"my-6\" />\n\n                    <div className=\"rounded-lg p-4 border border-border/50 relative overflow-hidden min-h-[140px]\">\n                      <AnimatePresence mode=\"wait\">\n                        {testimonials.map(\n                          (testimonial, index) =>\n                            index === currentTestimonialIndex && (\n                              <motion.div\n                                key={testimonial.id}\n                                initial={{ opacity: 0, y: 20 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                exit={{ opacity: 0, y: -20 }}\n                                transition={{ duration: 0.5 }}\n                                className=\"absolute inset-0 p-4\"\n                              >\n                                <div className=\"flex items-center gap-3 mb-2\">\n                                  <div className=\"h-8 w-8 rounded-full overflow-hidden\">\n                                    <img\n                                      src={\n                                        testimonial.avatar || \"/placeholder.svg\"\n                                      }\n                                      alt={`${testimonial.name}'s avatar`}\n                                      className=\"w-full h-full object-cover\"\n                                    />\n                                  </div>\n                                  <div>\n                                    <p className=\"font-medium text-sm\">\n                                      {testimonial.name}\n                                    </p>\n                                    <p className=\"text-xs text-muted-foreground\">\n                                      {testimonial.role}\n                                      {testimonial.company &&\n                                        ` at ${testimonial.company}`}\n                                    </p>\n                                  </div>\n                                  <div className=\"ml-auto flex\">\n                                    {[...Array(testimonial.rating)].map(\n                                      (_, i) => (\n                                        <Star\n                                          key={i}\n                                          className=\"h-3 w-3 fill-primary text-primary\"\n                                        />\n                                      ),\n                                    )}\n                                  </div>\n                                </div>\n                                <p className=\"text-sm italic\">\n                                  {testimonial.content}\n                                </p>\n                              </motion.div>\n                            ),\n                        )}\n                      </AnimatePresence>\n                    </div>\n\n                    {testimonials.length > 1 && (\n                      <div className=\"flex justify-center mt-4 gap-1\">\n                        {testimonials.map((_, index) => (\n                          <button\n                            key={index}\n                            className={`h-1.5 rounded-full transition-all ${\n                              index === currentTestimonialIndex\n                                ? \"w-4 bg-primary\"\n                                : \"w-1.5 bg-primary/30\"\n                            }`}\n                            onClick={() => setCurrentTestimonialIndex(index)}\n                            aria-label={`View testimonial ${index + 1}`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
        "type": "registry:block"
      }
    ]
  },
  "testimonial-one": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "testimonial-one",
    "type": "registry:block",
    "title": "Testimonial One",
    "description": "A testimonial component with a single testimonial.",
    "author": "shaduxe-ui",
    "dependencies": [
      "motion",
      "lucide-react"
    ],
    "registryDependencies": [
      "card",
      "badge",
      "button",
      "separator"
    ],
    "files": [
      {
        "path": "default/blocks/testimonial-one",
        "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Quote, Star } from \"lucide-react\";\nimport { motion, useAnimation, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport interface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  company: string;\n  content: string;\n  rating: number;\n  avatar: string;\n}\n\nexport interface TestimonialOneProps {\n  className?: string;\n}\n\n// All data in a single config object\nconst testimonialsConfig = {\n  title: \"Loved by the community\",\n  subtitle:\n    \"Don't just take our word for it. See what developers and companies have to say about our starter template.\",\n  badgeText: \"Trusted by developers\",\n  testimonials: [\n    {\n      id: 1,\n      name: \"Alex Johnson\",\n      role: \"Full Stack Developer\",\n      company: \"TechFlow\",\n      content:\n        \"This starter template saved me weeks of setup time. The Supabase integration is flawless, and the UI components are beautiful and easy to customize. Worth every penny!\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\",\n    },\n    {\n      id: 2,\n      name: \"Sarah Miller\",\n      role: \"Frontend Engineer\",\n      company: \"DesignHub\",\n      content:\n        \"I've used many starter templates, but this one stands out for its clean architecture and attention to detail. The TypeScript support is excellent, and the documentation is comprehensive.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/44.jpg\",\n    },\n    {\n      id: 3,\n      name: \"Michael Chen\",\n      role: \"Product Manager\",\n      company: \"InnovateLabs\",\n      content:\n        \"Our team was able to launch our MVP in record time thanks to this template. The authentication flow and user management features worked right out of the box. Highly recommended!\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/46.jpg\",\n    },\n  ],\n  trustedCompanies: [\"Google\", \"Microsoft\", \"Airbnb\", \"Spotify\", \"Netflix\"],\n  autoRotateInterval: 6000,\n  trustedCompaniesTitle: \"Trusted by developers from companies worldwide\",\n};\n\nexport default function TestimonialOne({ className }: TestimonialOneProps) {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // Destructure config for easier access\n  const {\n    title,\n    subtitle,\n    badgeText,\n    testimonials,\n    autoRotateInterval,\n    trustedCompanies,\n    trustedCompaniesTitle,\n  } = testimonialsConfig;\n\n  // Refs for scroll animations\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const isInView = useInView(sectionRef, { once: true, amount: 0.2 });\n  const controls = useAnimation();\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  // Trigger animations when section comes into view\n  useEffect(() => {\n    if (isInView) {\n      controls.start(\"visible\");\n    }\n  }, [isInView, controls]);\n\n  // Auto rotate testimonials\n  useEffect(() => {\n    if (autoRotateInterval <= 0 || testimonials.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setActiveIndex((current) => (current + 1) % testimonials.length);\n    }, autoRotateInterval);\n\n    return () => clearInterval(interval);\n  }, [autoRotateInterval, testimonials.length]);\n\n  if (testimonials.length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      ref={sectionRef}\n      id=\"testimonials\"\n      className={`py-24 overflow-hidden ${className || \"\"}`}\n    >\n      <motion.div\n        initial=\"hidden\"\n        animate={controls}\n        variants={containerVariants}\n        className=\"grid grid-cols-1 gap-16 w-full md:grid-cols-2 lg:gap-24\"\n      >\n        {/* Left side: Heading and navigation */}\n        <motion.div\n          variants={itemVariants}\n          className=\"flex flex-col justify-center\"\n        >\n          <div className=\"space-y-6\">\n            {badgeText && (\n              <div className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary/10 text-primary\">\n                <Star className=\"mr-1 h-3.5 w-3.5 fill-primary\" />\n                <span>{badgeText}</span>\n              </div>\n            )}\n\n            <h2 className=\"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl\">\n              {title}\n            </h2>\n\n            <p className=\"max-w-[600px] text-muted-foreground md:text-xl/relaxed\">\n              {subtitle}\n            </p>\n\n            <div className=\"flex items-center gap-3 pt-4\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setActiveIndex(index)}\n                  className={`h-2.5 rounded-full transition-all duration-300 ${\n                    activeIndex === index\n                      ? \"w-10 bg-primary\"\n                      : \"w-2.5 bg-muted-foreground/30\"\n                  }`}\n                  aria-label={`View testimonial ${index + 1}`}\n                />\n              ))}\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Right side: Testimonial cards */}\n        <motion.div\n          variants={itemVariants}\n          className=\"relative h-full mr-10 min-h-[300px] md:min-h-[400px]\"\n        >\n          {testimonials.map((testimonial, index) => (\n            <motion.div\n              key={testimonial.id}\n              className=\"absolute inset-0\"\n              initial={{ opacity: 0, x: 100 }}\n              animate={{\n                opacity: activeIndex === index ? 1 : 0,\n                x: activeIndex === index ? 0 : 100,\n                scale: activeIndex === index ? 1 : 0.9,\n              }}\n              transition={{ duration: 0.5, ease: \"easeInOut\" }}\n              style={{ zIndex: activeIndex === index ? 10 : 0 }}\n            >\n              <div className=\"bg-card border shadow-lg rounded-xl p-8 h-full flex flex-col\">\n                <div className=\"mb-6 flex gap-2\">\n                  {Array(testimonial.rating)\n                    .fill(0)\n                    .map((_, i) => (\n                      <Star\n                        key={i}\n                        className=\"h-5 w-5 fill-yellow-500 text-yellow-500\"\n                      />\n                    ))}\n                </div>\n\n                <div className=\"relative mb-6 flex-1\">\n                  <Quote className=\"absolute -top-2 -left-2 h-8 w-8 text-primary/20 rotate-180\" />\n                  <p className=\"relative z-10 text-lg font-medium leading-relaxed\">\n                    \"{testimonial.content}\"\n                  </p>\n                </div>\n\n                <Separator className=\"my-4\" />\n\n                <div className=\"flex items-center gap-4\">\n                  <Avatar className=\"h-12 w-12 border\">\n                    <AvatarImage\n                      src={testimonial.avatar}\n                      alt={testimonial.name}\n                    />\n                    <AvatarFallback>\n                      {testimonial.name.charAt(0)}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <h3 className=\"font-semibold\">{testimonial.name}</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {testimonial.role}, {testimonial.company}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n\n          {/* Decorative elements */}\n          <div className=\"absolute -bottom-6 -left-6 h-24 w-24 rounded-xl bg-primary/5\"></div>\n          <div className=\"absolute -top-6 -right-6 h-24 w-24 rounded-xl bg-primary/5\"></div>\n        </motion.div>\n      </motion.div>\n\n      {/* Logo cloud */}\n      {trustedCompanies.length > 0 && (\n        <motion.div\n          variants={itemVariants}\n          initial=\"hidden\"\n          animate={controls}\n          className=\"mt-24 text-center\"\n        >\n          <h3 className=\"text-sm font-medium text-muted-foreground mb-8\">\n            {trustedCompaniesTitle}\n          </h3>\n          <div className=\"flex flex-wrap justify-center gap-x-12 gap-y-8\">\n            {trustedCompanies.map((company) => (\n              <div\n                key={company}\n                className=\"text-2xl font-semibold text-muted-foreground/50\"\n              >\n                {company}\n              </div>\n            ))}\n          </div>\n        </motion.div>\n      )}\n    </section>\n  );\n}",
        "type": "registry:block"
      }
    ]
  },
  "testimonial-two": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "testimonial-two",
    "type": "registry:block",
    "title": "Testimonial Two",
    "description": "A testimonial component with a single testimonial.",
    "author": "shaduxe-ui",
    "dependencies": [
      "motion",
      "lucide-react"
    ],
    "registryDependencies": [
      "card",
      "badge",
      "button",
      "separator"
    ],
    "files": [
      {
        "path": "default/blocks/testimonial-two",
        "content": "\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { cn } from \"@/lib/utils\";\nimport { ChevronLeft, ChevronRight, Quote, Star } from \"lucide-react\";\nimport { motion, useAnimation, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport interface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  company: string;\n  content: string;\n  rating: number;\n  avatar: string;\n}\n\nexport interface TestimonialTwoProps {\n  className?: string;\n}\n\n// All data in a single config object\nconst testimonialsConfig = {\n  title: \"Loved by Developers\",\n  subtitle: \"See what others are saying about our premium starter template\",\n  testimonials: [\n    {\n      id: 1,\n      name: \"Alex Johnson\",\n      role: \"Full Stack Developer\",\n      company: \"TechFlow\",\n      content:\n        \"This starter template saved me weeks of setup time. The Supabase integration is flawless, and the UI components are beautiful and easy to customize.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/32.jpg\",\n    },\n    {\n      id: 2,\n      name: \"Sarah Miller\",\n      role: \"Frontend Engineer\",\n      company: \"DesignHub\",\n      content:\n        \"I've used many starter templates, but this one stands out for its clean architecture and attention to detail.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/women/44.jpg\",\n    },\n    {\n      id: 3,\n      name: \"Michael Chen\",\n      role: \"Product Manager\",\n      company: \"InnovateLabs\",\n      content:\n        \"Our team was able to launch our MVP in record time thanks to this template. The authentication flow and user management features worked right out of the box.\",\n      rating: 5,\n      avatar: \"https://randomuser.me/api/portraits/men/46.jpg\",\n    },\n  ],\n  autoRotateInterval: 6000,\n  showVerifiedBadge: true,\n  trustedCompanies: [\"Google\", \"Microsoft\", \"Airbnb\", \"Spotify\", \"Netflix\"],\n  trustedCompaniesTitle: \"Trusted by teams at these companies and more\",\n};\n\nexport default function TestimonialTwo({ className }: TestimonialTwoProps) {\n  // State for active testimonial\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // Destructure config for easier access\n  const {\n    title,\n    subtitle,\n    testimonials,\n    autoRotateInterval,\n    showVerifiedBadge,\n    trustedCompanies,\n    trustedCompaniesTitle,\n  } = testimonialsConfig;\n\n  // Refs for scroll animations\n  const sectionRef = useRef<HTMLElement>(null);\n  const isInView = useInView(sectionRef, { once: true, amount: 0.2 });\n  const controls = useAnimation();\n\n  // Automatically cycle through testimonials\n  useEffect(() => {\n    if (autoRotateInterval <= 0 || testimonials.length <= 1) return;\n\n    const interval = setInterval(() => {\n      setActiveIndex((prev) => (prev + 1) % testimonials.length);\n    }, autoRotateInterval);\n\n    return () => clearInterval(interval);\n  }, [testimonials.length, autoRotateInterval]);\n\n  // Trigger animations when section comes into view\n  useEffect(() => {\n    if (isInView) {\n      controls.start(\"visible\");\n    }\n  }, [isInView, controls]);\n\n  // Handlers for navigation\n  const handlePrev = () => {\n    setActiveIndex(\n      (prev) => (prev - 1 + testimonials.length) % testimonials.length,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prev) => (prev + 1) % testimonials.length);\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  if (testimonials.length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      ref={sectionRef}\n      id=\"testimonials-alt\"\n      className={cn(\n        \"py-16 md:py-32 relative overflow-hidden flex justify-center\",\n        className,\n      )}\n    >\n      <div className=\"items-center px-4 md:px-6\">\n        <motion.div\n          initial=\"hidden\"\n          animate={controls}\n          variants={containerVariants}\n          className=\"text-center mb-12 space-y-4\"\n        >\n          <motion.h2\n            variants={itemVariants}\n            className=\"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl\"\n          >\n            {title}\n          </motion.h2>\n          <motion.p\n            variants={itemVariants}\n            className=\"text-muted-foreground max-w-[700px] mx-auto md:text-xl/relaxed\"\n          >\n            {subtitle}\n          </motion.p>\n        </motion.div>\n\n        <motion.div\n          initial=\"hidden\"\n          animate={controls}\n          variants={containerVariants}\n          className=\"md:grid md:grid-cols-[1fr_auto] gap-8 items-center max-w-[1200px]\"\n        >\n          <motion.div variants={itemVariants} className=\"relative\">\n            <div className=\"absolute -top-6 -left-6 z-10\">\n              <Quote className=\"h-12 w-12 text-primary/20\" strokeWidth={1} />\n            </div>\n\n            {/* Testimonial cards */}\n            <div className=\"relative h-[320px] md:h-[280px]\">\n              {testimonials.map((testimonial, index) => (\n                <Card\n                  key={testimonial.id}\n                  className={cn(\n                    \"absolute inset-0 transition-all duration-500 border\",\n                    index === activeIndex\n                      ? \"opacity-100 translate-x-0 shadow-lg\"\n                      : \"opacity-0 translate-x-[100px] pointer-events-none\",\n                  )}\n                >\n                  <CardContent className=\"p-6 md:p-8 h-full flex flex-col\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div className=\"flex items-center gap-4\">\n                        <Avatar className=\"h-12 w-12 border-2 border-primary/10\">\n                          <AvatarImage\n                            src={testimonial.avatar}\n                            alt={testimonial.name}\n                          />\n                          <AvatarFallback>\n                            {testimonial.name.charAt(0)}\n                          </AvatarFallback>\n                        </Avatar>\n                        <div className=\"text-left\">\n                          <h4 className=\"font-semibold\">{testimonial.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {testimonial.role}, {testimonial.company}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex\">\n                        {[...Array(testimonial.rating)].map((_, i) => (\n                          <Star\n                            key={i}\n                            className=\"h-4 w-4 fill-yellow-500 text-yellow-500\"\n                          />\n                        ))}\n                      </div>\n                    </div>\n\n                    <Separator className=\"my-4\" />\n\n                    <p className=\"flex-1 italic text-base/relaxed\">\n                      \"{testimonial.content}\"\n                    </p>\n\n                    {showVerifiedBadge && (\n                      <div className=\"mt-4 text-xs text-right text-muted-foreground\">\n                        Verified Customer\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Navigation buttons */}\n          <motion.div\n            variants={itemVariants}\n            className=\"flex md:flex-col gap-4 justify-center mt-8 md:mt-0\"\n          >\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={handlePrev}\n              className=\"rounded-full h-10 w-10\"\n              aria-label=\"Previous testimonial\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n\n            <div className=\"flex md:flex-col gap-2 items-center justify-center\">\n              {testimonials.map((_, index) => (\n                <div\n                  key={index}\n                  className={cn(\n                    \"w-2 h-2 rounded-full transition-colors\",\n                    index === activeIndex\n                      ? \"bg-primary\"\n                      : \"bg-muted-foreground/20\",\n                  )}\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setActiveIndex(index)}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\" || e.key === \" \") {\n                      setActiveIndex(index);\n                    }\n                  }}\n                  aria-label={`Go to testimonial ${index + 1}`}\n                />\n              ))}\n            </div>\n\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={handleNext}\n              className=\"rounded-full h-10 w-10\"\n              aria-label=\"Next testimonial\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </motion.div>\n        </motion.div>\n\n        {/* Logo cloud - Updated to match TestimonialsSection */}\n        {trustedCompanies.length > 0 && (\n          <motion.div variants={itemVariants} className=\"mt-20 pt-10 border-t\">\n            <h3 className=\"text-sm font-medium text-muted-foreground text-center mb-8\">\n              {trustedCompaniesTitle}\n            </h3>\n            <div className=\"flex flex-wrap justify-center gap-x-12 gap-y-8\">\n              {trustedCompanies.map((company) => (\n                <div\n                  key={company}\n                  className=\"text-2xl font-semibold text-muted-foreground/50\"\n                >\n                  {company}\n                </div>\n              ))}\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </section>\n  );\n}",
        "type": "registry:block"
      }
    ]
  },
  "utils": {
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "utils",
    "type": "registry:lib",
    "title": "utils",
    "author": "shaduxe-ui (https://shaduxe.com)",
    "dependencies": [
      "clsx",
      "tailwind-merge"
    ],
    "files": [
      {
        "path": "default/lib/utils",
        "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}",
        "type": "registry:lib"
      }
    ]
  }
}